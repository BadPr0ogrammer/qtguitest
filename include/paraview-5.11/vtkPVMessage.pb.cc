// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vtkPVMessage.proto

#include "vtkPVMessage.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_vtkPVMessage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientsInformation_ClientInfo_vtkPVMessage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vtkPVMessage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LinkState_LinkDescription_vtkPVMessage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vtkPVMessage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_vtkPVMessage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vtkPVMessage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PXMRegistrationState_Entry_vtkPVMessage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vtkPVMessage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProxyDefinitionState_ProxyXMLDefinition_vtkPVMessage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vtkPVMessage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProxyState_Annotation_vtkPVMessage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vtkPVMessage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ProxyState_Property_vtkPVMessage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vtkPVMessage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProxyState_SubProxy_vtkPVMessage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vtkPVMessage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProxyState_UserData_vtkPVMessage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vtkPVMessage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Variant_vtkPVMessage_2eproto;
namespace paraview_protobuf {
class VariantDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Variant> _instance;
} _Variant_default_instance_;
class VariantListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VariantList> _instance;
} _VariantList_default_instance_;
class MessageCollectionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MessageCollection> _instance;
} _MessageCollection_default_instance_;
class MessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message> _instance;
} _Message_default_instance_;
class DefinitionHeaderDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DefinitionHeader> _instance;
} _DefinitionHeader_default_instance_;
class ProxyState_SubProxyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProxyState_SubProxy> _instance;
} _ProxyState_SubProxy_default_instance_;
class ProxyState_AnnotationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProxyState_Annotation> _instance;
} _ProxyState_Annotation_default_instance_;
class ProxyState_UserDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProxyState_UserData> _instance;
} _ProxyState_UserData_default_instance_;
class ProxyState_PropertyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProxyState_Property> _instance;
} _ProxyState_Property_default_instance_;
class ProxyStateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProxyState> _instance;
} _ProxyState_default_instance_;
class PXMRegistrationState_EntryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PXMRegistrationState_Entry> _instance;
} _PXMRegistrationState_Entry_default_instance_;
class PXMRegistrationStateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PXMRegistrationState> _instance;
} _PXMRegistrationState_default_instance_;
class ProxyDefinitionState_ProxyXMLDefinitionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProxyDefinitionState_ProxyXMLDefinition> _instance;
} _ProxyDefinitionState_ProxyXMLDefinition_default_instance_;
class ProxyDefinitionStateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProxyDefinitionState> _instance;
} _ProxyDefinitionState_default_instance_;
class PullRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PullRequest> _instance;
} _PullRequest_default_instance_;
class ProxySelectionModelStateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProxySelectionModelState> _instance;
} _ProxySelectionModelState_default_instance_;
class LinkState_LinkDescriptionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LinkState_LinkDescription> _instance;
} _LinkState_LinkDescription_default_instance_;
class LinkStateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LinkState> _instance;
} _LinkState_default_instance_;
class MousePointerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MousePointer> _instance;
} _MousePointer_default_instance_;
class ChartViewBoundsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChartViewBounds> _instance;
} _ChartViewBounds_default_instance_;
class ClientsInformation_ClientInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClientsInformation_ClientInfo> _instance;
} _ClientsInformation_ClientInfo_default_instance_;
class ClientsInformationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClientsInformation> _instance;
} _ClientsInformation_default_instance_;
class ChatMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChatMessage> _instance;
} _ChatMessage_default_instance_;
class QtEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<QtEvent> _instance;
} _QtEvent_default_instance_;
}  // namespace paraview_protobuf
static void InitDefaultsscc_info_ChartViewBounds_vtkPVMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paraview_protobuf::_ChartViewBounds_default_instance_;
    new (ptr) ::paraview_protobuf::ChartViewBounds();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paraview_protobuf::ChartViewBounds::InitAsDefaultInstance();
}

VTKREMOTINGSERVERMANAGER_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChartViewBounds_vtkPVMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ChartViewBounds_vtkPVMessage_2eproto}, {}};

static void InitDefaultsscc_info_ChatMessage_vtkPVMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paraview_protobuf::_ChatMessage_default_instance_;
    new (ptr) ::paraview_protobuf::ChatMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paraview_protobuf::ChatMessage::InitAsDefaultInstance();
}

VTKREMOTINGSERVERMANAGER_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChatMessage_vtkPVMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ChatMessage_vtkPVMessage_2eproto}, {}};

static void InitDefaultsscc_info_ClientsInformation_vtkPVMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paraview_protobuf::_ClientsInformation_default_instance_;
    new (ptr) ::paraview_protobuf::ClientsInformation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paraview_protobuf::ClientsInformation::InitAsDefaultInstance();
}

VTKREMOTINGSERVERMANAGER_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientsInformation_vtkPVMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ClientsInformation_vtkPVMessage_2eproto}, {}};

static void InitDefaultsscc_info_ClientsInformation_ClientInfo_vtkPVMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paraview_protobuf::_ClientsInformation_ClientInfo_default_instance_;
    new (ptr) ::paraview_protobuf::ClientsInformation_ClientInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paraview_protobuf::ClientsInformation_ClientInfo::InitAsDefaultInstance();
}

VTKREMOTINGSERVERMANAGER_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientsInformation_ClientInfo_vtkPVMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ClientsInformation_ClientInfo_vtkPVMessage_2eproto}, {}};

static void InitDefaultsscc_info_DefinitionHeader_vtkPVMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paraview_protobuf::_DefinitionHeader_default_instance_;
    new (ptr) ::paraview_protobuf::DefinitionHeader();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paraview_protobuf::DefinitionHeader::InitAsDefaultInstance();
}

VTKREMOTINGSERVERMANAGER_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DefinitionHeader_vtkPVMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DefinitionHeader_vtkPVMessage_2eproto}, {}};

static void InitDefaultsscc_info_LinkState_vtkPVMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paraview_protobuf::_LinkState_default_instance_;
    new (ptr) ::paraview_protobuf::LinkState();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paraview_protobuf::LinkState::InitAsDefaultInstance();
}

VTKREMOTINGSERVERMANAGER_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LinkState_vtkPVMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LinkState_vtkPVMessage_2eproto}, {}};

static void InitDefaultsscc_info_LinkState_LinkDescription_vtkPVMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paraview_protobuf::_LinkState_LinkDescription_default_instance_;
    new (ptr) ::paraview_protobuf::LinkState_LinkDescription();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paraview_protobuf::LinkState_LinkDescription::InitAsDefaultInstance();
}

VTKREMOTINGSERVERMANAGER_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LinkState_LinkDescription_vtkPVMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LinkState_LinkDescription_vtkPVMessage_2eproto}, {}};

static void InitDefaultsscc_info_Message_vtkPVMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paraview_protobuf::_Message_default_instance_;
    new (ptr) ::paraview_protobuf::Message();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paraview_protobuf::Message::InitAsDefaultInstance();
}

VTKREMOTINGSERVERMANAGER_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_vtkPVMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_vtkPVMessage_2eproto}, {}};

static void InitDefaultsscc_info_MessageCollection_vtkPVMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paraview_protobuf::_MessageCollection_default_instance_;
    new (ptr) ::paraview_protobuf::MessageCollection();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paraview_protobuf::MessageCollection::InitAsDefaultInstance();
}

VTKREMOTINGSERVERMANAGER_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MessageCollection_vtkPVMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MessageCollection_vtkPVMessage_2eproto}, {
      &scc_info_Message_vtkPVMessage_2eproto.base,}};

static void InitDefaultsscc_info_MousePointer_vtkPVMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paraview_protobuf::_MousePointer_default_instance_;
    new (ptr) ::paraview_protobuf::MousePointer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paraview_protobuf::MousePointer::InitAsDefaultInstance();
}

VTKREMOTINGSERVERMANAGER_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MousePointer_vtkPVMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MousePointer_vtkPVMessage_2eproto}, {}};

static void InitDefaultsscc_info_PXMRegistrationState_vtkPVMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paraview_protobuf::_PXMRegistrationState_default_instance_;
    new (ptr) ::paraview_protobuf::PXMRegistrationState();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paraview_protobuf::PXMRegistrationState::InitAsDefaultInstance();
}

VTKREMOTINGSERVERMANAGER_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PXMRegistrationState_vtkPVMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PXMRegistrationState_vtkPVMessage_2eproto}, {}};

static void InitDefaultsscc_info_PXMRegistrationState_Entry_vtkPVMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paraview_protobuf::_PXMRegistrationState_Entry_default_instance_;
    new (ptr) ::paraview_protobuf::PXMRegistrationState_Entry();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paraview_protobuf::PXMRegistrationState_Entry::InitAsDefaultInstance();
}

VTKREMOTINGSERVERMANAGER_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PXMRegistrationState_Entry_vtkPVMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PXMRegistrationState_Entry_vtkPVMessage_2eproto}, {}};

static void InitDefaultsscc_info_ProxyDefinitionState_vtkPVMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paraview_protobuf::_ProxyDefinitionState_default_instance_;
    new (ptr) ::paraview_protobuf::ProxyDefinitionState();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paraview_protobuf::ProxyDefinitionState::InitAsDefaultInstance();
}

VTKREMOTINGSERVERMANAGER_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProxyDefinitionState_vtkPVMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProxyDefinitionState_vtkPVMessage_2eproto}, {}};

static void InitDefaultsscc_info_ProxyDefinitionState_ProxyXMLDefinition_vtkPVMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paraview_protobuf::_ProxyDefinitionState_ProxyXMLDefinition_default_instance_;
    new (ptr) ::paraview_protobuf::ProxyDefinitionState_ProxyXMLDefinition();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paraview_protobuf::ProxyDefinitionState_ProxyXMLDefinition::InitAsDefaultInstance();
}

VTKREMOTINGSERVERMANAGER_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProxyDefinitionState_ProxyXMLDefinition_vtkPVMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProxyDefinitionState_ProxyXMLDefinition_vtkPVMessage_2eproto}, {}};

static void InitDefaultsscc_info_ProxySelectionModelState_vtkPVMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paraview_protobuf::_ProxySelectionModelState_default_instance_;
    new (ptr) ::paraview_protobuf::ProxySelectionModelState();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paraview_protobuf::ProxySelectionModelState::InitAsDefaultInstance();
}

VTKREMOTINGSERVERMANAGER_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProxySelectionModelState_vtkPVMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProxySelectionModelState_vtkPVMessage_2eproto}, {}};

static void InitDefaultsscc_info_ProxyState_vtkPVMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paraview_protobuf::_ProxyState_default_instance_;
    new (ptr) ::paraview_protobuf::ProxyState();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paraview_protobuf::ProxyState::InitAsDefaultInstance();
}

VTKREMOTINGSERVERMANAGER_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProxyState_vtkPVMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProxyState_vtkPVMessage_2eproto}, {}};

static void InitDefaultsscc_info_ProxyState_Annotation_vtkPVMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paraview_protobuf::_ProxyState_Annotation_default_instance_;
    new (ptr) ::paraview_protobuf::ProxyState_Annotation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paraview_protobuf::ProxyState_Annotation::InitAsDefaultInstance();
}

VTKREMOTINGSERVERMANAGER_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProxyState_Annotation_vtkPVMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProxyState_Annotation_vtkPVMessage_2eproto}, {}};

static void InitDefaultsscc_info_ProxyState_Property_vtkPVMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paraview_protobuf::_ProxyState_Property_default_instance_;
    new (ptr) ::paraview_protobuf::ProxyState_Property();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paraview_protobuf::ProxyState_Property::InitAsDefaultInstance();
}

VTKREMOTINGSERVERMANAGER_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ProxyState_Property_vtkPVMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ProxyState_Property_vtkPVMessage_2eproto}, {
      &scc_info_Variant_vtkPVMessage_2eproto.base,
      &scc_info_ProxyState_UserData_vtkPVMessage_2eproto.base,}};

static void InitDefaultsscc_info_ProxyState_SubProxy_vtkPVMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paraview_protobuf::_ProxyState_SubProxy_default_instance_;
    new (ptr) ::paraview_protobuf::ProxyState_SubProxy();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paraview_protobuf::ProxyState_SubProxy::InitAsDefaultInstance();
}

VTKREMOTINGSERVERMANAGER_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProxyState_SubProxy_vtkPVMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProxyState_SubProxy_vtkPVMessage_2eproto}, {}};

static void InitDefaultsscc_info_ProxyState_UserData_vtkPVMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paraview_protobuf::_ProxyState_UserData_default_instance_;
    new (ptr) ::paraview_protobuf::ProxyState_UserData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paraview_protobuf::ProxyState_UserData::InitAsDefaultInstance();
}

VTKREMOTINGSERVERMANAGER_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProxyState_UserData_vtkPVMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProxyState_UserData_vtkPVMessage_2eproto}, {
      &scc_info_Variant_vtkPVMessage_2eproto.base,}};

static void InitDefaultsscc_info_PullRequest_vtkPVMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paraview_protobuf::_PullRequest_default_instance_;
    new (ptr) ::paraview_protobuf::PullRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paraview_protobuf::PullRequest::InitAsDefaultInstance();
}

VTKREMOTINGSERVERMANAGER_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PullRequest_vtkPVMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PullRequest_vtkPVMessage_2eproto}, {}};

static void InitDefaultsscc_info_QtEvent_vtkPVMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paraview_protobuf::_QtEvent_default_instance_;
    new (ptr) ::paraview_protobuf::QtEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paraview_protobuf::QtEvent::InitAsDefaultInstance();
}

VTKREMOTINGSERVERMANAGER_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_QtEvent_vtkPVMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_QtEvent_vtkPVMessage_2eproto}, {}};

static void InitDefaultsscc_info_Variant_vtkPVMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paraview_protobuf::_Variant_default_instance_;
    new (ptr) ::paraview_protobuf::Variant();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paraview_protobuf::Variant::InitAsDefaultInstance();
}

VTKREMOTINGSERVERMANAGER_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Variant_vtkPVMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Variant_vtkPVMessage_2eproto}, {}};

static void InitDefaultsscc_info_VariantList_vtkPVMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paraview_protobuf::_VariantList_default_instance_;
    new (ptr) ::paraview_protobuf::VariantList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paraview_protobuf::VariantList::InitAsDefaultInstance();
}

VTKREMOTINGSERVERMANAGER_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_VariantList_vtkPVMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_VariantList_vtkPVMessage_2eproto}, {
      &scc_info_Variant_vtkPVMessage_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_vtkPVMessage_2eproto[24];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_vtkPVMessage_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_vtkPVMessage_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_vtkPVMessage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::Variant, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::Variant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::Variant, type_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::Variant, idtype_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::Variant, integer_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::Variant, float64_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::Variant, proxy_global_id_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::Variant, port_number_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::Variant, txt_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::Variant, binary_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::VariantList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::VariantList, variant_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::MessageCollection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::MessageCollection, item_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::Message, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::Message, _internal_metadata_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::Message, _extensions_),
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::Message, global_id_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::Message, location_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::Message, share_only_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::Message, req_def_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::Message, client_id_),
  0,
  1,
  2,
  3,
  4,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::DefinitionHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxyState_SubProxy, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxyState_SubProxy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxyState_SubProxy, name_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxyState_SubProxy, global_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxyState_Annotation, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxyState_Annotation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxyState_Annotation, key_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxyState_Annotation, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxyState_UserData, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxyState_UserData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxyState_UserData, key_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxyState_UserData, variant_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxyState_Property, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxyState_Property, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxyState_Property, name_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxyState_Property, value_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxyState_Property, user_data_),
  0,
  1,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxyState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::PXMRegistrationState_Entry, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::PXMRegistrationState_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::PXMRegistrationState_Entry, group_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::PXMRegistrationState_Entry, name_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::PXMRegistrationState_Entry, global_id_),
  0,
  1,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::PXMRegistrationState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxyDefinitionState_ProxyXMLDefinition, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxyDefinitionState_ProxyXMLDefinition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxyDefinitionState_ProxyXMLDefinition, group_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxyDefinitionState_ProxyXMLDefinition, name_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxyDefinitionState_ProxyXMLDefinition, xml_),
  0,
  1,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxyDefinitionState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::PullRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ProxySelectionModelState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::LinkState_LinkDescription, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::LinkState_LinkDescription, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::LinkState_LinkDescription, proxy_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::LinkState_LinkDescription, property_name_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::LinkState_LinkDescription, direction_),
  1,
  0,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::LinkState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::MousePointer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ChartViewBounds, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ClientsInformation_ClientInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ClientsInformation_ClientInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ClientsInformation_ClientInfo, user_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ClientsInformation_ClientInfo, name_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ClientsInformation_ClientInfo, is_master_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ClientsInformation_ClientInfo, follow_cam_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ClientsInformation_ClientInfo, disable_further_connections_),
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ClientsInformation_ClientInfo, connect_id_),
  1,
  0,
  2,
  3,
  4,
  5,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ClientsInformation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::ChatMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::paraview_protobuf::QtEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, sizeof(::paraview_protobuf::Variant)},
  { 21, -1, sizeof(::paraview_protobuf::VariantList)},
  { 27, -1, sizeof(::paraview_protobuf::MessageCollection)},
  { 33, 43, sizeof(::paraview_protobuf::Message)},
  { 48, -1, sizeof(::paraview_protobuf::DefinitionHeader)},
  { 53, 60, sizeof(::paraview_protobuf::ProxyState_SubProxy)},
  { 62, 69, sizeof(::paraview_protobuf::ProxyState_Annotation)},
  { 71, 78, sizeof(::paraview_protobuf::ProxyState_UserData)},
  { 80, 88, sizeof(::paraview_protobuf::ProxyState_Property)},
  { 91, -1, sizeof(::paraview_protobuf::ProxyState)},
  { 96, 104, sizeof(::paraview_protobuf::PXMRegistrationState_Entry)},
  { 107, -1, sizeof(::paraview_protobuf::PXMRegistrationState)},
  { 112, 120, sizeof(::paraview_protobuf::ProxyDefinitionState_ProxyXMLDefinition)},
  { 123, -1, sizeof(::paraview_protobuf::ProxyDefinitionState)},
  { 128, -1, sizeof(::paraview_protobuf::PullRequest)},
  { 133, -1, sizeof(::paraview_protobuf::ProxySelectionModelState)},
  { 138, 146, sizeof(::paraview_protobuf::LinkState_LinkDescription)},
  { 149, -1, sizeof(::paraview_protobuf::LinkState)},
  { 154, -1, sizeof(::paraview_protobuf::MousePointer)},
  { 159, -1, sizeof(::paraview_protobuf::ChartViewBounds)},
  { 164, 175, sizeof(::paraview_protobuf::ClientsInformation_ClientInfo)},
  { 181, -1, sizeof(::paraview_protobuf::ClientsInformation)},
  { 186, -1, sizeof(::paraview_protobuf::ChatMessage)},
  { 191, -1, sizeof(::paraview_protobuf::QtEvent)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::paraview_protobuf::_Variant_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::paraview_protobuf::_VariantList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::paraview_protobuf::_MessageCollection_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::paraview_protobuf::_Message_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::paraview_protobuf::_DefinitionHeader_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::paraview_protobuf::_ProxyState_SubProxy_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::paraview_protobuf::_ProxyState_Annotation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::paraview_protobuf::_ProxyState_UserData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::paraview_protobuf::_ProxyState_Property_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::paraview_protobuf::_ProxyState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::paraview_protobuf::_PXMRegistrationState_Entry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::paraview_protobuf::_PXMRegistrationState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::paraview_protobuf::_ProxyDefinitionState_ProxyXMLDefinition_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::paraview_protobuf::_ProxyDefinitionState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::paraview_protobuf::_PullRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::paraview_protobuf::_ProxySelectionModelState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::paraview_protobuf::_LinkState_LinkDescription_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::paraview_protobuf::_LinkState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::paraview_protobuf::_MousePointer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::paraview_protobuf::_ChartViewBounds_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::paraview_protobuf::_ClientsInformation_ClientInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::paraview_protobuf::_ClientsInformation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::paraview_protobuf::_ChatMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::paraview_protobuf::_QtEvent_default_instance_),
};

const char descriptor_table_protodef_vtkPVMessage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022vtkPVMessage.proto\022\021paraview_protobuf\""
  "\225\002\n\007Variant\022-\n\004type\030\001 \002(\0162\037.paraview_pro"
  "tobuf.Variant.Type\022\016\n\006idtype\030\003 \003(\022\022\017\n\007in"
  "teger\030\004 \003(\021\022\017\n\007float64\030\005 \003(\001\022\027\n\017proxy_gl"
  "obal_id\030\006 \003(\004\022\023\n\013port_number\030\007 \003(\005\022\013\n\003tx"
  "t\030\010 \003(\t\022\016\n\006binary\030\t \003(\014\"^\n\004Type\022\007\n\003INT\020\000"
  "\022\013\n\007FLOAT64\020\001\022\n\n\006IDTYPE\020\002\022\n\n\006STRING\020\003\022\t\n"
  "\005PROXY\020\004\022\t\n\005INPUT\020\005\022\t\n\005BYTES\020\006\022\007\n\003MAP\020\007\""
  ":\n\013VariantList\022+\n\007variant\030\001 \003(\0132\032.paravi"
  "ew_protobuf.Variant\"=\n\021MessageCollection"
  "\022(\n\004item\030\001 \003(\0132\032.paraview_protobuf.Messa"
  "ge\"\201\001\n\007Message\022\021\n\tglobal_id\030\001 \002(\004\022\020\n\010loc"
  "ation\030\002 \002(\r\022\031\n\nshare_only\030\003 \001(\010:\005false\022\026"
  "\n\007req_def\030\004 \001(\010:\005false\022\024\n\tclient_id\030\005 \001("
  "\r:\0010*\010\010\n\020\200\200\200\200\002\"v\n\020DefinitionHeader20\n\014cl"
  "ient_class\022\032.paraview_protobuf.Message\030\n"
  " \001(\t20\n\014server_class\022\032.paraview_protobuf"
  ".Message\030\013 \001(\t\"\267\007\n\nProxyState\032+\n\010SubProx"
  "y\022\014\n\004name\030\001 \002(\t\022\021\n\tglobal_id\030\002 \002(\r\032(\n\nAn"
  "notation\022\013\n\003key\030\001 \002(\t\022\r\n\005value\030\002 \002(\t\032D\n\010"
  "UserData\022\013\n\003key\030\001 \002(\t\022+\n\007variant\030\002 \003(\0132\032"
  ".paraview_protobuf.Variant\032~\n\010Property\022\014"
  "\n\004name\030\001 \002(\t\022)\n\005value\030\002 \001(\0132\032.paraview_p"
  "rotobuf.Variant\0229\n\tuser_data\030\003 \003(\0132&.par"
  "aview_protobuf.ProxyState.UserData2-\n\txm"
  "l_group\022\032.paraview_protobuf.Message\030\024 \001("
  "\t2,\n\010xml_name\022\032.paraview_protobuf.Messag"
  "e\030\025 \001(\t26\n\022xml_sub_proxy_name\022\032.paraview"
  "_protobuf.Message\030\026 \001(\t2T\n\010property\022\032.pa"
  "raview_protobuf.Message\030\027 \003(\0132&.paraview"
  "_protobuf.ProxyState.Property2T\n\010subprox"
  "y\022\032.paraview_protobuf.Message\030\030 \003(\0132&.pa"
  "raview_protobuf.ProxyState.SubProxy2X\n\na"
  "nnotation\022\032.paraview_protobuf.Message\030\031 "
  "\003(\0132(.paraview_protobuf.ProxyState.Annot"
  "ation29\n\016has_annotation\022\032.paraview_proto"
  "buf.Message\030\032 \001(\010:\005false2U\n\tuser_data\022\032."
  "paraview_protobuf.Message\030\033 \003(\0132&.paravi"
  "ew_protobuf.ProxyState.UserData2,\n\010log_n"
  "ame\022\032.paraview_protobuf.Message\030\034 \001(\t21\n"
  "\rvtk_classname\022\032.paraview_protobuf.Messa"
  "ge\030\035 \001(\t\"\207\003\n\024PXMRegistrationState\0327\n\005Ent"
  "ry\022\r\n\005group\030\001 \001(\t\022\014\n\004name\030\002 \002(\t\022\021\n\tgloba"
  "l_id\030\003 \002(\0042c\n\020registered_proxy\022\032.paravie"
  "w_protobuf.Message\030\036 \003(\0132-.paraview_prot"
  "obuf.PXMRegistrationState.Entry2m\n\032regis"
  "tered_selection_model\022\032.paraview_protobu"
  "f.Message\030\037 \003(\0132-.paraview_protobuf.PXMR"
  "egistrationState.Entry2b\n\017registered_lin"
  "k\022\032.paraview_protobuf.Message\030  \003(\0132-.pa"
  "raview_protobuf.PXMRegistrationState.Ent"
  "ry\"\311\002\n\024ProxyDefinitionState\032>\n\022ProxyXMLD"
  "efinition\022\r\n\005group\030\001 \002(\t\022\014\n\004name\030\002 \002(\t\022\013"
  "\n\003xml\030\003 \002(\t2t\n\024xml_definition_proxy\022\032.pa"
  "raview_protobuf.Message\030# \003(\0132:.paraview"
  "_protobuf.ProxyDefinitionState.ProxyXMLD"
  "efinition2{\n\033xml_custom_definition_proxy"
  "\022\032.paraview_protobuf.Message\030$ \003(\0132:.par"
  "aview_protobuf.ProxyDefinitionState.Prox"
  "yXMLDefinition\"X\n\013PullRequest2I\n\targumen"
  "ts\022\032.paraview_protobuf.Message\030( \003(\0132\032.p"
  "araview_protobuf.Variant\"\333\001\n\030ProxySelect"
  "ionModelState24\n\rcurrent_proxy\022\032.paravie"
  "w_protobuf.Message\0304 \001(\r:\001024\n\014current_p"
  "ort\022\032.paraview_protobuf.Message\0305 \001(\005:\002-"
  "12)\n\005proxy\022\032.paraview_protobuf.Message\0302"
  " \003(\r2(\n\004port\022\032.paraview_protobuf.Message"
  "\0303 \003(\005\"\201\004\n\tLinkState\032\260\001\n\017LinkDescription"
  "\022\r\n\005proxy\030\001 \002(\r\022\025\n\rproperty_name\030\002 \001(\t\022I"
  "\n\tdirection\030\003 \002(\01626.paraview_protobuf.Li"
  "nkState.LinkDescription.Direction\",\n\tDir"
  "ection\022\010\n\004NONE\020\000\022\t\n\005INPUT\020\001\022\n\n\006OUTPUT\020\0022"
  ":\n\020propagate_update\022\032.paraview_protobuf."
  "Message\030< \001(\010:\004true21\n\007enabled\022\032.paravie"
  "w_protobuf.Message\030= \001(\010:\004true2B\n\030sync_i"
  "nteractive_renders\022\032.paraview_protobuf.M"
  "essage\030> \001(\010:\004true2V\n\004link\022\032.paraview_pr"
  "otobuf.Message\030\? \003(\0132,.paraview_protobuf"
  ".LinkState.LinkDescription26\n\022exception_"
  "property\022\032.paraview_protobuf.Message\030@ \003"
  "(\t\"\312\002\n\014MousePointer\"(\n\005Ratio\022\010\n\004BOTH\020\000\022\n"
  "\n\006HEIGHT\020\001\022\t\n\005WIDTH\020\0022(\n\004view\022\032.paraview"
  "_protobuf.Message\030F \001(\r2(\n\001x\022\032.paraview_"
  "protobuf.Message\030G \001(\001:\00102(\n\001y\022\032.paravie"
  "w_protobuf.Message\030H \001(\001:\001024\n\tforceShow"
  "\022\032.paraview_protobuf.Message\030I \001(\010:\005fals"
  "e2\\\n\tratioType\022\032.paraview_protobuf.Messa"
  "ge\030J \001(\0162%.paraview_protobuf.MousePointe"
  "r.Ratio:\006HEIGHT\"f\n\017ChartViewBounds2(\n\004vi"
  "ew\022\032.paraview_protobuf.Message\030K \001(\r2)\n\005"
  "range\022\032.paraview_protobuf.Message\030L \003(\001\""
  "\223\002\n\022ClientsInformation\032\240\001\n\nClientInfo\022\014\n"
  "\004user\030\001 \002(\r\022\014\n\004name\030\002 \001(\t\022\030\n\tis_master\030\003"
  " \001(\010:\005false\022\031\n\nfollow_cam\030\004 \001(\010:\005false\022*"
  "\n\033disable_further_connections\030\005 \001(\010:\005fal"
  "se\022\025\n\nconnect_id\030\006 \001(\r:\00102Z\n\004user\022\032.para"
  "view_protobuf.Message\030P \003(\01320.paraview_p"
  "rotobuf.ClientsInformation.ClientInfo\"b\n"
  "\013ChatMessage2*\n\006author\022\032.paraview_protob"
  "uf.Message\030T \001(\r2\'\n\003txt\022\032.paraview_proto"
  "buf.Message\030U \001(\t\"\177\n\007QtEvent\"\"\n\013QtEventT"
  "ype\022\010\n\004CHAT\020\001\022\t\n\005OTHER\020\0032P\n\004type\022\032.parav"
  "iew_protobuf.Message\030b \001(\0162&.paraview_pr"
  "otobuf.QtEvent.QtEventType"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_vtkPVMessage_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_vtkPVMessage_2eproto_sccs[24] = {
  &scc_info_ChartViewBounds_vtkPVMessage_2eproto.base,
  &scc_info_ChatMessage_vtkPVMessage_2eproto.base,
  &scc_info_ClientsInformation_vtkPVMessage_2eproto.base,
  &scc_info_ClientsInformation_ClientInfo_vtkPVMessage_2eproto.base,
  &scc_info_DefinitionHeader_vtkPVMessage_2eproto.base,
  &scc_info_LinkState_vtkPVMessage_2eproto.base,
  &scc_info_LinkState_LinkDescription_vtkPVMessage_2eproto.base,
  &scc_info_Message_vtkPVMessage_2eproto.base,
  &scc_info_MessageCollection_vtkPVMessage_2eproto.base,
  &scc_info_MousePointer_vtkPVMessage_2eproto.base,
  &scc_info_PXMRegistrationState_vtkPVMessage_2eproto.base,
  &scc_info_PXMRegistrationState_Entry_vtkPVMessage_2eproto.base,
  &scc_info_ProxyDefinitionState_vtkPVMessage_2eproto.base,
  &scc_info_ProxyDefinitionState_ProxyXMLDefinition_vtkPVMessage_2eproto.base,
  &scc_info_ProxySelectionModelState_vtkPVMessage_2eproto.base,
  &scc_info_ProxyState_vtkPVMessage_2eproto.base,
  &scc_info_ProxyState_Annotation_vtkPVMessage_2eproto.base,
  &scc_info_ProxyState_Property_vtkPVMessage_2eproto.base,
  &scc_info_ProxyState_SubProxy_vtkPVMessage_2eproto.base,
  &scc_info_ProxyState_UserData_vtkPVMessage_2eproto.base,
  &scc_info_PullRequest_vtkPVMessage_2eproto.base,
  &scc_info_QtEvent_vtkPVMessage_2eproto.base,
  &scc_info_Variant_vtkPVMessage_2eproto.base,
  &scc_info_VariantList_vtkPVMessage_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_vtkPVMessage_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_vtkPVMessage_2eproto = {
  false, false, descriptor_table_protodef_vtkPVMessage_2eproto, "vtkPVMessage.proto", 4146,
  &descriptor_table_vtkPVMessage_2eproto_once, descriptor_table_vtkPVMessage_2eproto_sccs, descriptor_table_vtkPVMessage_2eproto_deps, 24, 0,
  schemas, file_default_instances, TableStruct_vtkPVMessage_2eproto::offsets,
  file_level_metadata_vtkPVMessage_2eproto, 24, file_level_enum_descriptors_vtkPVMessage_2eproto, file_level_service_descriptors_vtkPVMessage_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_vtkPVMessage_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_vtkPVMessage_2eproto)), true);
namespace paraview_protobuf {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Variant_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_vtkPVMessage_2eproto);
  return file_level_enum_descriptors_vtkPVMessage_2eproto[0];
}
bool Variant_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Variant_Type Variant::INT;
constexpr Variant_Type Variant::FLOAT64;
constexpr Variant_Type Variant::IDTYPE;
constexpr Variant_Type Variant::STRING;
constexpr Variant_Type Variant::PROXY;
constexpr Variant_Type Variant::INPUT;
constexpr Variant_Type Variant::BYTES;
constexpr Variant_Type Variant::MAP;
constexpr Variant_Type Variant::Type_MIN;
constexpr Variant_Type Variant::Type_MAX;
constexpr int Variant::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LinkState_LinkDescription_Direction_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_vtkPVMessage_2eproto);
  return file_level_enum_descriptors_vtkPVMessage_2eproto[1];
}
bool LinkState_LinkDescription_Direction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr LinkState_LinkDescription_Direction LinkState_LinkDescription::NONE;
constexpr LinkState_LinkDescription_Direction LinkState_LinkDescription::INPUT;
constexpr LinkState_LinkDescription_Direction LinkState_LinkDescription::OUTPUT;
constexpr LinkState_LinkDescription_Direction LinkState_LinkDescription::Direction_MIN;
constexpr LinkState_LinkDescription_Direction LinkState_LinkDescription::Direction_MAX;
constexpr int LinkState_LinkDescription::Direction_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MousePointer_Ratio_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_vtkPVMessage_2eproto);
  return file_level_enum_descriptors_vtkPVMessage_2eproto[2];
}
bool MousePointer_Ratio_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr MousePointer_Ratio MousePointer::BOTH;
constexpr MousePointer_Ratio MousePointer::HEIGHT;
constexpr MousePointer_Ratio MousePointer::WIDTH;
constexpr MousePointer_Ratio MousePointer::Ratio_MIN;
constexpr MousePointer_Ratio MousePointer::Ratio_MAX;
constexpr int MousePointer::Ratio_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* QtEvent_QtEventType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_vtkPVMessage_2eproto);
  return file_level_enum_descriptors_vtkPVMessage_2eproto[3];
}
bool QtEvent_QtEventType_IsValid(int value) {
  switch (value) {
    case 1:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr QtEvent_QtEventType QtEvent::CHAT;
constexpr QtEvent_QtEventType QtEvent::OTHER;
constexpr QtEvent_QtEventType QtEvent::QtEventType_MIN;
constexpr QtEvent_QtEventType QtEvent::QtEventType_MAX;
constexpr int QtEvent::QtEventType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void Variant::InitAsDefaultInstance() {
}
class Variant::_Internal {
 public:
  using HasBits = decltype(std::declval<Variant>()._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

Variant::Variant(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  idtype_(arena),
  integer_(arena),
  float64_(arena),
  proxy_global_id_(arena),
  port_number_(arena),
  txt_(arena),
  binary_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:paraview_protobuf.Variant)
}
Variant::Variant(const Variant& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      idtype_(from.idtype_),
      integer_(from.integer_),
      float64_(from.float64_),
      proxy_global_id_(from.proxy_global_id_),
      port_number_(from.port_number_),
      txt_(from.txt_),
      binary_(from.binary_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:paraview_protobuf.Variant)
}

void Variant::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Variant_vtkPVMessage_2eproto.base);
  type_ = 0;
}

Variant::~Variant() {
  // @@protoc_insertion_point(destructor:paraview_protobuf.Variant)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Variant::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Variant::ArenaDtor(void* object) {
  Variant* _this = reinterpret_cast< Variant* >(object);
  (void)_this;
}
void Variant::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Variant::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Variant& Variant::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Variant_vtkPVMessage_2eproto.base);
  return *internal_default_instance();
}


void Variant::Clear() {
// @@protoc_insertion_point(message_clear_start:paraview_protobuf.Variant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  idtype_.Clear();
  integer_.Clear();
  float64_.Clear();
  proxy_global_id_.Clear();
  port_number_.Clear();
  txt_.Clear();
  binary_.Clear();
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Variant::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required .paraview_protobuf.Variant.Type type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::paraview_protobuf::Variant_Type_IsValid(val))) {
            _internal_set_type(static_cast<::paraview_protobuf::Variant_Type>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // repeated sint64 idtype = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_idtype(::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<24>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedSInt64Parser(_internal_mutable_idtype(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated sint32 integer = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_integer(::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<32>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedSInt32Parser(_internal_mutable_integer(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated double float64 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_float64(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
            ptr += sizeof(double);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<41>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_float64(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint64 proxy_global_id = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_proxy_global_id(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<48>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_proxy_global_id(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 port_number = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_port_number(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<56>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_port_number(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string txt = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_txt();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "paraview_protobuf.Variant.txt");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated bytes binary = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_binary();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Variant::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:paraview_protobuf.Variant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .paraview_protobuf.Variant.Type type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // repeated sint64 idtype = 3;
  for (int i = 0, n = this->_internal_idtype_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt64ToArray(3, this->_internal_idtype(i), target);
  }

  // repeated sint32 integer = 4;
  for (int i = 0, n = this->_internal_integer_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(4, this->_internal_integer(i), target);
  }

  // repeated double float64 = 5;
  for (int i = 0, n = this->_internal_float64_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_float64(i), target);
  }

  // repeated uint64 proxy_global_id = 6;
  for (int i = 0, n = this->_internal_proxy_global_id_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal_proxy_global_id(i), target);
  }

  // repeated int32 port_number = 7;
  for (int i = 0, n = this->_internal_port_number_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_port_number(i), target);
  }

  // repeated string txt = 8;
  for (int i = 0, n = this->_internal_txt_size(); i < n; i++) {
    const auto& s = this->_internal_txt(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "paraview_protobuf.Variant.txt");
    target = stream->WriteString(8, s, target);
  }

  // repeated bytes binary = 9;
  for (int i = 0, n = this->_internal_binary_size(); i < n; i++) {
    const auto& s = this->_internal_binary(i);
    target = stream->WriteBytes(9, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paraview_protobuf.Variant)
  return target;
}

size_t Variant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paraview_protobuf.Variant)
  size_t total_size = 0;

  // required .paraview_protobuf.Variant.Type type = 1;
  if (_internal_has_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated sint64 idtype = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      SInt64Size(this->idtype_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_idtype_size());
    total_size += data_size;
  }

  // repeated sint32 integer = 4;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      SInt32Size(this->integer_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_integer_size());
    total_size += data_size;
  }

  // repeated double float64 = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_float64_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_float64_size());
    total_size += data_size;
  }

  // repeated uint64 proxy_global_id = 6;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->proxy_global_id_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_proxy_global_id_size());
    total_size += data_size;
  }

  // repeated int32 port_number = 7;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->port_number_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_port_number_size());
    total_size += data_size;
  }

  // repeated string txt = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(txt_.size());
  for (int i = 0, n = txt_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      txt_.Get(i));
  }

  // repeated bytes binary = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(binary_.size());
  for (int i = 0, n = binary_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      binary_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Variant::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paraview_protobuf.Variant)
  GOOGLE_DCHECK_NE(&from, this);
  const Variant* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Variant>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paraview_protobuf.Variant)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paraview_protobuf.Variant)
    MergeFrom(*source);
  }
}

void Variant::MergeFrom(const Variant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paraview_protobuf.Variant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  idtype_.MergeFrom(from.idtype_);
  integer_.MergeFrom(from.integer_);
  float64_.MergeFrom(from.float64_);
  proxy_global_id_.MergeFrom(from.proxy_global_id_);
  port_number_.MergeFrom(from.port_number_);
  txt_.MergeFrom(from.txt_);
  binary_.MergeFrom(from.binary_);
  if (from._internal_has_type()) {
    _internal_set_type(from._internal_type());
  }
}

void Variant::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paraview_protobuf.Variant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Variant::CopyFrom(const Variant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paraview_protobuf.Variant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Variant::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void Variant::InternalSwap(Variant* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  idtype_.InternalSwap(&other->idtype_);
  integer_.InternalSwap(&other->integer_);
  float64_.InternalSwap(&other->float64_);
  proxy_global_id_.InternalSwap(&other->proxy_global_id_);
  port_number_.InternalSwap(&other->port_number_);
  txt_.InternalSwap(&other->txt_);
  binary_.InternalSwap(&other->binary_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Variant::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void VariantList::InitAsDefaultInstance() {
}
class VariantList::_Internal {
 public:
};

VariantList::VariantList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  variant_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:paraview_protobuf.VariantList)
}
VariantList::VariantList(const VariantList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      variant_(from.variant_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:paraview_protobuf.VariantList)
}

void VariantList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VariantList_vtkPVMessage_2eproto.base);
}

VariantList::~VariantList() {
  // @@protoc_insertion_point(destructor:paraview_protobuf.VariantList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VariantList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void VariantList::ArenaDtor(void* object) {
  VariantList* _this = reinterpret_cast< VariantList* >(object);
  (void)_this;
}
void VariantList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VariantList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VariantList& VariantList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VariantList_vtkPVMessage_2eproto.base);
  return *internal_default_instance();
}


void VariantList::Clear() {
// @@protoc_insertion_point(message_clear_start:paraview_protobuf.VariantList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  variant_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VariantList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .paraview_protobuf.Variant variant = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_variant(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VariantList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:paraview_protobuf.VariantList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .paraview_protobuf.Variant variant = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_variant_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_variant(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paraview_protobuf.VariantList)
  return target;
}

size_t VariantList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paraview_protobuf.VariantList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .paraview_protobuf.Variant variant = 1;
  total_size += 1UL * this->_internal_variant_size();
  for (const auto& msg : this->variant_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VariantList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paraview_protobuf.VariantList)
  GOOGLE_DCHECK_NE(&from, this);
  const VariantList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VariantList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paraview_protobuf.VariantList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paraview_protobuf.VariantList)
    MergeFrom(*source);
  }
}

void VariantList::MergeFrom(const VariantList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paraview_protobuf.VariantList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  variant_.MergeFrom(from.variant_);
}

void VariantList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paraview_protobuf.VariantList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VariantList::CopyFrom(const VariantList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paraview_protobuf.VariantList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VariantList::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(variant_)) return false;
  return true;
}

void VariantList::InternalSwap(VariantList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  variant_.InternalSwap(&other->variant_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VariantList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MessageCollection::InitAsDefaultInstance() {
}
class MessageCollection::_Internal {
 public:
};

MessageCollection::MessageCollection(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  item_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:paraview_protobuf.MessageCollection)
}
MessageCollection::MessageCollection(const MessageCollection& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      item_(from.item_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:paraview_protobuf.MessageCollection)
}

void MessageCollection::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MessageCollection_vtkPVMessage_2eproto.base);
}

MessageCollection::~MessageCollection() {
  // @@protoc_insertion_point(destructor:paraview_protobuf.MessageCollection)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MessageCollection::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MessageCollection::ArenaDtor(void* object) {
  MessageCollection* _this = reinterpret_cast< MessageCollection* >(object);
  (void)_this;
}
void MessageCollection::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MessageCollection::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessageCollection& MessageCollection::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MessageCollection_vtkPVMessage_2eproto.base);
  return *internal_default_instance();
}


void MessageCollection::Clear() {
// @@protoc_insertion_point(message_clear_start:paraview_protobuf.MessageCollection)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MessageCollection::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .paraview_protobuf.Message item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_item(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MessageCollection::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:paraview_protobuf.MessageCollection)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .paraview_protobuf.Message item = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_item_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_item(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paraview_protobuf.MessageCollection)
  return target;
}

size_t MessageCollection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paraview_protobuf.MessageCollection)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .paraview_protobuf.Message item = 1;
  total_size += 1UL * this->_internal_item_size();
  for (const auto& msg : this->item_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageCollection::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paraview_protobuf.MessageCollection)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageCollection* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MessageCollection>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paraview_protobuf.MessageCollection)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paraview_protobuf.MessageCollection)
    MergeFrom(*source);
  }
}

void MessageCollection::MergeFrom(const MessageCollection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paraview_protobuf.MessageCollection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_.MergeFrom(from.item_);
}

void MessageCollection::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paraview_protobuf.MessageCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageCollection::CopyFrom(const MessageCollection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paraview_protobuf.MessageCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageCollection::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(item_)) return false;
  return true;
}

void MessageCollection::InternalSwap(MessageCollection* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  item_.InternalSwap(&other->item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageCollection::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message::InitAsDefaultInstance() {
}
class Message::_Internal {
 public:
  using HasBits = decltype(std::declval<Message>()._has_bits_);
  static void set_has_global_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_location(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_share_only(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_req_def(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_client_id(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

Message::Message(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  _extensions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:paraview_protobuf.Message)
}
Message::Message(const Message& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _extensions_.MergeFrom(from._extensions_);
  ::memcpy(&global_id_, &from.global_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&client_id_) -
    reinterpret_cast<char*>(&global_id_)) + sizeof(client_id_));
  // @@protoc_insertion_point(copy_constructor:paraview_protobuf.Message)
}

void Message::SharedCtor() {
  ::memset(&global_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_id_) -
      reinterpret_cast<char*>(&global_id_)) + sizeof(client_id_));
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:paraview_protobuf.Message)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Message::ArenaDtor(void* object) {
  Message* _this = reinterpret_cast< Message* >(object);
  (void)_this;
}
void Message::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message& Message::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_vtkPVMessage_2eproto.base);
  return *internal_default_instance();
}


void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:paraview_protobuf.Message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _extensions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&global_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&client_id_) -
        reinterpret_cast<char*>(&global_id_)) + sizeof(client_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required uint64 global_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_global_id(&has_bits);
          global_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 location = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_location(&has_bits);
          location_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool share_only = 3 [default = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_share_only(&has_bits);
          share_only_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool req_def = 4 [default = false];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_req_def(&has_bits);
          req_def_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 client_id = 5 [default = 0];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_client_id(&has_bits);
          client_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
      if ((80u <= tag)) {
        ptr = _extensions_.ParseField(tag, ptr,
            internal_default_instance(), &_internal_metadata_, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:paraview_protobuf.Message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 global_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_global_id(), target);
  }

  // required uint32 location = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_location(), target);
  }

  // optional bool share_only = 3 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_share_only(), target);
  }

  // optional bool req_def = 4 [default = false];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_req_def(), target);
  }

  // optional uint32 client_id = 5 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_client_id(), target);
  }

  // Extension range [10, 536870912)
  target = _extensions_._InternalSerialize(
      10, 536870912, target, stream);

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paraview_protobuf.Message)
  return target;
}

size_t Message::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paraview_protobuf.Message)
  size_t total_size = 0;

  if (_internal_has_global_id()) {
    // required uint64 global_id = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_global_id());
  }

  if (_internal_has_location()) {
    // required uint32 location = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_location());
  }

  return total_size;
}
size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paraview_protobuf.Message)
  size_t total_size = 0;

  total_size += _extensions_.ByteSize();

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 global_id = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_global_id());

    // required uint32 location = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_location());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001cu) {
    // optional bool share_only = 3 [default = false];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool req_def = 4 [default = false];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional uint32 client_id = 5 [default = 0];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_client_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paraview_protobuf.Message)
  GOOGLE_DCHECK_NE(&from, this);
  const Message* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paraview_protobuf.Message)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paraview_protobuf.Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paraview_protobuf.Message)
  GOOGLE_DCHECK_NE(&from, this);
  _extensions_.MergeFrom(from._extensions_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      global_id_ = from.global_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      location_ = from.location_;
    }
    if (cached_has_bits & 0x00000004u) {
      share_only_ = from.share_only_;
    }
    if (cached_has_bits & 0x00000008u) {
      req_def_ = from.req_def_;
    }
    if (cached_has_bits & 0x00000010u) {
      client_id_ = from.client_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Message::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paraview_protobuf.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paraview_protobuf.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  if (!_extensions_.IsInitialized()) {
    return false;
  }

  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void Message::InternalSwap(Message* other) {
  using std::swap;
  _extensions_.Swap(&other->_extensions_);
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message, client_id_)
      + sizeof(Message::client_id_)
      - PROTOBUF_FIELD_OFFSET(Message, global_id_)>(
          reinterpret_cast<char*>(&global_id_),
          reinterpret_cast<char*>(&other->global_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Message::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DefinitionHeader::InitAsDefaultInstance() {
}
class DefinitionHeader::_Internal {
 public:
};

DefinitionHeader::DefinitionHeader(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:paraview_protobuf.DefinitionHeader)
}
DefinitionHeader::DefinitionHeader(const DefinitionHeader& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:paraview_protobuf.DefinitionHeader)
}

void DefinitionHeader::SharedCtor() {
}

DefinitionHeader::~DefinitionHeader() {
  // @@protoc_insertion_point(destructor:paraview_protobuf.DefinitionHeader)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DefinitionHeader::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DefinitionHeader::ArenaDtor(void* object) {
  DefinitionHeader* _this = reinterpret_cast< DefinitionHeader* >(object);
  (void)_this;
}
void DefinitionHeader::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DefinitionHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DefinitionHeader& DefinitionHeader::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DefinitionHeader_vtkPVMessage_2eproto.base);
  return *internal_default_instance();
}


void DefinitionHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:paraview_protobuf.DefinitionHeader)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DefinitionHeader::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DefinitionHeader::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:paraview_protobuf.DefinitionHeader)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paraview_protobuf.DefinitionHeader)
  return target;
}

size_t DefinitionHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paraview_protobuf.DefinitionHeader)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DefinitionHeader::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paraview_protobuf.DefinitionHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const DefinitionHeader* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DefinitionHeader>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paraview_protobuf.DefinitionHeader)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paraview_protobuf.DefinitionHeader)
    MergeFrom(*source);
  }
}

void DefinitionHeader::MergeFrom(const DefinitionHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paraview_protobuf.DefinitionHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DefinitionHeader::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paraview_protobuf.DefinitionHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DefinitionHeader::CopyFrom(const DefinitionHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paraview_protobuf.DefinitionHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DefinitionHeader::IsInitialized() const {
  return true;
}

void DefinitionHeader::InternalSwap(DefinitionHeader* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DefinitionHeader::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProxyState_SubProxy::InitAsDefaultInstance() {
}
class ProxyState_SubProxy::_Internal {
 public:
  using HasBits = decltype(std::declval<ProxyState_SubProxy>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_global_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

ProxyState_SubProxy::ProxyState_SubProxy(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:paraview_protobuf.ProxyState.SubProxy)
}
ProxyState_SubProxy::ProxyState_SubProxy(const ProxyState_SubProxy& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_name()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  global_id_ = from.global_id_;
  // @@protoc_insertion_point(copy_constructor:paraview_protobuf.ProxyState.SubProxy)
}

void ProxyState_SubProxy::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProxyState_SubProxy_vtkPVMessage_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  global_id_ = 0u;
}

ProxyState_SubProxy::~ProxyState_SubProxy() {
  // @@protoc_insertion_point(destructor:paraview_protobuf.ProxyState.SubProxy)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProxyState_SubProxy::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProxyState_SubProxy::ArenaDtor(void* object) {
  ProxyState_SubProxy* _this = reinterpret_cast< ProxyState_SubProxy* >(object);
  (void)_this;
}
void ProxyState_SubProxy::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProxyState_SubProxy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProxyState_SubProxy& ProxyState_SubProxy::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProxyState_SubProxy_vtkPVMessage_2eproto.base);
  return *internal_default_instance();
}


void ProxyState_SubProxy::Clear() {
// @@protoc_insertion_point(message_clear_start:paraview_protobuf.ProxyState.SubProxy)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmpty();
  }
  global_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProxyState_SubProxy::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "paraview_protobuf.ProxyState.SubProxy.name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 global_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_global_id(&has_bits);
          global_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProxyState_SubProxy::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:paraview_protobuf.ProxyState.SubProxy)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "paraview_protobuf.ProxyState.SubProxy.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // required uint32 global_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_global_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paraview_protobuf.ProxyState.SubProxy)
  return target;
}

size_t ProxyState_SubProxy::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paraview_protobuf.ProxyState.SubProxy)
  size_t total_size = 0;

  if (_internal_has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (_internal_has_global_id()) {
    // required uint32 global_id = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_global_id());
  }

  return total_size;
}
size_t ProxyState_SubProxy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paraview_protobuf.ProxyState.SubProxy)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());

    // required uint32 global_id = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_global_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProxyState_SubProxy::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paraview_protobuf.ProxyState.SubProxy)
  GOOGLE_DCHECK_NE(&from, this);
  const ProxyState_SubProxy* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProxyState_SubProxy>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paraview_protobuf.ProxyState.SubProxy)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paraview_protobuf.ProxyState.SubProxy)
    MergeFrom(*source);
  }
}

void ProxyState_SubProxy::MergeFrom(const ProxyState_SubProxy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paraview_protobuf.ProxyState.SubProxy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      global_id_ = from.global_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProxyState_SubProxy::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paraview_protobuf.ProxyState.SubProxy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProxyState_SubProxy::CopyFrom(const ProxyState_SubProxy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paraview_protobuf.ProxyState.SubProxy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxyState_SubProxy::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProxyState_SubProxy::InternalSwap(ProxyState_SubProxy* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(global_id_, other->global_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProxyState_SubProxy::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProxyState_Annotation::InitAsDefaultInstance() {
}
class ProxyState_Annotation::_Internal {
 public:
  using HasBits = decltype(std::declval<ProxyState_Annotation>()._has_bits_);
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

ProxyState_Annotation::ProxyState_Annotation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:paraview_protobuf.ProxyState.Annotation)
}
ProxyState_Annotation::ProxyState_Annotation(const ProxyState_Annotation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_key()) {
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key(),
      GetArena());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_value()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:paraview_protobuf.ProxyState.Annotation)
}

void ProxyState_Annotation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProxyState_Annotation_vtkPVMessage_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ProxyState_Annotation::~ProxyState_Annotation() {
  // @@protoc_insertion_point(destructor:paraview_protobuf.ProxyState.Annotation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProxyState_Annotation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProxyState_Annotation::ArenaDtor(void* object) {
  ProxyState_Annotation* _this = reinterpret_cast< ProxyState_Annotation* >(object);
  (void)_this;
}
void ProxyState_Annotation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProxyState_Annotation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProxyState_Annotation& ProxyState_Annotation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProxyState_Annotation_vtkPVMessage_2eproto.base);
  return *internal_default_instance();
}


void ProxyState_Annotation::Clear() {
// @@protoc_insertion_point(message_clear_start:paraview_protobuf.ProxyState.Annotation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProxyState_Annotation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "paraview_protobuf.ProxyState.Annotation.key");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "paraview_protobuf.ProxyState.Annotation.value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProxyState_Annotation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:paraview_protobuf.ProxyState.Annotation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "paraview_protobuf.ProxyState.Annotation.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // required string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "paraview_protobuf.ProxyState.Annotation.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paraview_protobuf.ProxyState.Annotation)
  return target;
}

size_t ProxyState_Annotation::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paraview_protobuf.ProxyState.Annotation)
  size_t total_size = 0;

  if (_internal_has_key()) {
    // required string key = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  if (_internal_has_value()) {
    // required string value = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  return total_size;
}
size_t ProxyState_Annotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paraview_protobuf.ProxyState.Annotation)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string key = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());

    // required string value = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProxyState_Annotation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paraview_protobuf.ProxyState.Annotation)
  GOOGLE_DCHECK_NE(&from, this);
  const ProxyState_Annotation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProxyState_Annotation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paraview_protobuf.ProxyState.Annotation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paraview_protobuf.ProxyState.Annotation)
    MergeFrom(*source);
  }
}

void ProxyState_Annotation::MergeFrom(const ProxyState_Annotation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paraview_protobuf.ProxyState.Annotation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_key(from._internal_key());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_value(from._internal_value());
    }
  }
}

void ProxyState_Annotation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paraview_protobuf.ProxyState.Annotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProxyState_Annotation::CopyFrom(const ProxyState_Annotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paraview_protobuf.ProxyState.Annotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxyState_Annotation::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProxyState_Annotation::InternalSwap(ProxyState_Annotation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ProxyState_Annotation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProxyState_UserData::InitAsDefaultInstance() {
}
class ProxyState_UserData::_Internal {
 public:
  using HasBits = decltype(std::declval<ProxyState_UserData>()._has_bits_);
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProxyState_UserData::ProxyState_UserData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  variant_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:paraview_protobuf.ProxyState.UserData)
}
ProxyState_UserData::ProxyState_UserData(const ProxyState_UserData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      variant_(from.variant_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_key()) {
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:paraview_protobuf.ProxyState.UserData)
}

void ProxyState_UserData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProxyState_UserData_vtkPVMessage_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ProxyState_UserData::~ProxyState_UserData() {
  // @@protoc_insertion_point(destructor:paraview_protobuf.ProxyState.UserData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProxyState_UserData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProxyState_UserData::ArenaDtor(void* object) {
  ProxyState_UserData* _this = reinterpret_cast< ProxyState_UserData* >(object);
  (void)_this;
}
void ProxyState_UserData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProxyState_UserData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProxyState_UserData& ProxyState_UserData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProxyState_UserData_vtkPVMessage_2eproto.base);
  return *internal_default_instance();
}


void ProxyState_UserData::Clear() {
// @@protoc_insertion_point(message_clear_start:paraview_protobuf.ProxyState.UserData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  variant_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    key_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProxyState_UserData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "paraview_protobuf.ProxyState.UserData.key");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .paraview_protobuf.Variant variant = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_variant(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProxyState_UserData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:paraview_protobuf.ProxyState.UserData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "paraview_protobuf.ProxyState.UserData.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // repeated .paraview_protobuf.Variant variant = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_variant_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_variant(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paraview_protobuf.ProxyState.UserData)
  return target;
}

size_t ProxyState_UserData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paraview_protobuf.ProxyState.UserData)
  size_t total_size = 0;

  // required string key = 1;
  if (_internal_has_key()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .paraview_protobuf.Variant variant = 2;
  total_size += 1UL * this->_internal_variant_size();
  for (const auto& msg : this->variant_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProxyState_UserData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paraview_protobuf.ProxyState.UserData)
  GOOGLE_DCHECK_NE(&from, this);
  const ProxyState_UserData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProxyState_UserData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paraview_protobuf.ProxyState.UserData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paraview_protobuf.ProxyState.UserData)
    MergeFrom(*source);
  }
}

void ProxyState_UserData::MergeFrom(const ProxyState_UserData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paraview_protobuf.ProxyState.UserData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  variant_.MergeFrom(from.variant_);
  if (from._internal_has_key()) {
    _internal_set_key(from._internal_key());
  }
}

void ProxyState_UserData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paraview_protobuf.ProxyState.UserData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProxyState_UserData::CopyFrom(const ProxyState_UserData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paraview_protobuf.ProxyState.UserData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxyState_UserData::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(variant_)) return false;
  return true;
}

void ProxyState_UserData::InternalSwap(ProxyState_UserData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  variant_.InternalSwap(&other->variant_);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ProxyState_UserData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProxyState_Property::InitAsDefaultInstance() {
  ::paraview_protobuf::_ProxyState_Property_default_instance_._instance.get_mutable()->value_ = const_cast< ::paraview_protobuf::Variant*>(
      ::paraview_protobuf::Variant::internal_default_instance());
}
class ProxyState_Property::_Internal {
 public:
  using HasBits = decltype(std::declval<ProxyState_Property>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::paraview_protobuf::Variant& value(const ProxyState_Property* msg);
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::paraview_protobuf::Variant&
ProxyState_Property::_Internal::value(const ProxyState_Property* msg) {
  return *msg->value_;
}
ProxyState_Property::ProxyState_Property(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  user_data_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:paraview_protobuf.ProxyState.Property)
}
ProxyState_Property::ProxyState_Property(const ProxyState_Property& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      user_data_(from.user_data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_name()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  if (from._internal_has_value()) {
    value_ = new ::paraview_protobuf::Variant(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:paraview_protobuf.ProxyState.Property)
}

void ProxyState_Property::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProxyState_Property_vtkPVMessage_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_ = nullptr;
}

ProxyState_Property::~ProxyState_Property() {
  // @@protoc_insertion_point(destructor:paraview_protobuf.ProxyState.Property)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProxyState_Property::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete value_;
}

void ProxyState_Property::ArenaDtor(void* object) {
  ProxyState_Property* _this = reinterpret_cast< ProxyState_Property* >(object);
  (void)_this;
}
void ProxyState_Property::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProxyState_Property::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProxyState_Property& ProxyState_Property::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProxyState_Property_vtkPVMessage_2eproto.base);
  return *internal_default_instance();
}


void ProxyState_Property::Clear() {
// @@protoc_insertion_point(message_clear_start:paraview_protobuf.ProxyState.Property)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_data_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(value_ != nullptr);
      value_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProxyState_Property::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "paraview_protobuf.ProxyState.Property.name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .paraview_protobuf.Variant value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .paraview_protobuf.ProxyState.UserData user_data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_user_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProxyState_Property::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:paraview_protobuf.ProxyState.Property)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "paraview_protobuf.ProxyState.Property.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // optional .paraview_protobuf.Variant value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  // repeated .paraview_protobuf.ProxyState.UserData user_data = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_user_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_user_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paraview_protobuf.ProxyState.Property)
  return target;
}

size_t ProxyState_Property::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paraview_protobuf.ProxyState.Property)
  size_t total_size = 0;

  // required string name = 1;
  if (_internal_has_name()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .paraview_protobuf.ProxyState.UserData user_data = 3;
  total_size += 1UL * this->_internal_user_data_size();
  for (const auto& msg : this->user_data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .paraview_protobuf.Variant value = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProxyState_Property::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paraview_protobuf.ProxyState.Property)
  GOOGLE_DCHECK_NE(&from, this);
  const ProxyState_Property* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProxyState_Property>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paraview_protobuf.ProxyState.Property)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paraview_protobuf.ProxyState.Property)
    MergeFrom(*source);
  }
}

void ProxyState_Property::MergeFrom(const ProxyState_Property& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paraview_protobuf.ProxyState.Property)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_data_.MergeFrom(from.user_data_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_value()->::paraview_protobuf::Variant::MergeFrom(from._internal_value());
    }
  }
}

void ProxyState_Property::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paraview_protobuf.ProxyState.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProxyState_Property::CopyFrom(const ProxyState_Property& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paraview_protobuf.ProxyState.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxyState_Property::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(user_data_)) return false;
  if (_internal_has_value()) {
    if (!value_->IsInitialized()) return false;
  }
  return true;
}

void ProxyState_Property::InternalSwap(ProxyState_Property* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  user_data_.InternalSwap(&other->user_data_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProxyState_Property::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProxyState::InitAsDefaultInstance() {
}
class ProxyState::_Internal {
 public:
};

ProxyState::ProxyState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:paraview_protobuf.ProxyState)
}
ProxyState::ProxyState(const ProxyState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:paraview_protobuf.ProxyState)
}

void ProxyState::SharedCtor() {
}

ProxyState::~ProxyState() {
  // @@protoc_insertion_point(destructor:paraview_protobuf.ProxyState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProxyState::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProxyState::ArenaDtor(void* object) {
  ProxyState* _this = reinterpret_cast< ProxyState* >(object);
  (void)_this;
}
void ProxyState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProxyState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProxyState& ProxyState::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProxyState_vtkPVMessage_2eproto.base);
  return *internal_default_instance();
}


void ProxyState::Clear() {
// @@protoc_insertion_point(message_clear_start:paraview_protobuf.ProxyState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProxyState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProxyState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:paraview_protobuf.ProxyState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paraview_protobuf.ProxyState)
  return target;
}

size_t ProxyState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paraview_protobuf.ProxyState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProxyState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paraview_protobuf.ProxyState)
  GOOGLE_DCHECK_NE(&from, this);
  const ProxyState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProxyState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paraview_protobuf.ProxyState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paraview_protobuf.ProxyState)
    MergeFrom(*source);
  }
}

void ProxyState::MergeFrom(const ProxyState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paraview_protobuf.ProxyState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ProxyState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paraview_protobuf.ProxyState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProxyState::CopyFrom(const ProxyState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paraview_protobuf.ProxyState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxyState::IsInitialized() const {
  return true;
}

void ProxyState::InternalSwap(ProxyState* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProxyState::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PXMRegistrationState_Entry::InitAsDefaultInstance() {
}
class PXMRegistrationState_Entry::_Internal {
 public:
  using HasBits = decltype(std::declval<PXMRegistrationState_Entry>()._has_bits_);
  static void set_has_group(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_global_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000006) ^ 0x00000006) != 0;
  }
};

PXMRegistrationState_Entry::PXMRegistrationState_Entry(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:paraview_protobuf.PXMRegistrationState.Entry)
}
PXMRegistrationState_Entry::PXMRegistrationState_Entry(const PXMRegistrationState_Entry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_group()) {
    group_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_group(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_name()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  global_id_ = from.global_id_;
  // @@protoc_insertion_point(copy_constructor:paraview_protobuf.PXMRegistrationState.Entry)
}

void PXMRegistrationState_Entry::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PXMRegistrationState_Entry_vtkPVMessage_2eproto.base);
  group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  global_id_ = PROTOBUF_ULONGLONG(0);
}

PXMRegistrationState_Entry::~PXMRegistrationState_Entry() {
  // @@protoc_insertion_point(destructor:paraview_protobuf.PXMRegistrationState.Entry)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PXMRegistrationState_Entry::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  group_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PXMRegistrationState_Entry::ArenaDtor(void* object) {
  PXMRegistrationState_Entry* _this = reinterpret_cast< PXMRegistrationState_Entry* >(object);
  (void)_this;
}
void PXMRegistrationState_Entry::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PXMRegistrationState_Entry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PXMRegistrationState_Entry& PXMRegistrationState_Entry::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PXMRegistrationState_Entry_vtkPVMessage_2eproto.base);
  return *internal_default_instance();
}


void PXMRegistrationState_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:paraview_protobuf.PXMRegistrationState.Entry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      group_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      name_.ClearNonDefaultToEmpty();
    }
  }
  global_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PXMRegistrationState_Entry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string group = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_group();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "paraview_protobuf.PXMRegistrationState.Entry.group");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "paraview_protobuf.PXMRegistrationState.Entry.name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint64 global_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_global_id(&has_bits);
          global_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PXMRegistrationState_Entry::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:paraview_protobuf.PXMRegistrationState.Entry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string group = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_group().data(), static_cast<int>(this->_internal_group().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "paraview_protobuf.PXMRegistrationState.Entry.group");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_group(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "paraview_protobuf.PXMRegistrationState.Entry.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // required uint64 global_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_global_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paraview_protobuf.PXMRegistrationState.Entry)
  return target;
}

size_t PXMRegistrationState_Entry::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paraview_protobuf.PXMRegistrationState.Entry)
  size_t total_size = 0;

  if (_internal_has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (_internal_has_global_id()) {
    // required uint64 global_id = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_global_id());
  }

  return total_size;
}
size_t PXMRegistrationState_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paraview_protobuf.PXMRegistrationState.Entry)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());

    // required uint64 global_id = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_global_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string group = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_group());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PXMRegistrationState_Entry::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paraview_protobuf.PXMRegistrationState.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const PXMRegistrationState_Entry* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PXMRegistrationState_Entry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paraview_protobuf.PXMRegistrationState.Entry)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paraview_protobuf.PXMRegistrationState.Entry)
    MergeFrom(*source);
  }
}

void PXMRegistrationState_Entry::MergeFrom(const PXMRegistrationState_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paraview_protobuf.PXMRegistrationState.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_group(from._internal_group());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000004u) {
      global_id_ = from.global_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PXMRegistrationState_Entry::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paraview_protobuf.PXMRegistrationState.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PXMRegistrationState_Entry::CopyFrom(const PXMRegistrationState_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paraview_protobuf.PXMRegistrationState.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PXMRegistrationState_Entry::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void PXMRegistrationState_Entry::InternalSwap(PXMRegistrationState_Entry* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  group_.Swap(&other->group_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(global_id_, other->global_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PXMRegistrationState_Entry::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PXMRegistrationState::InitAsDefaultInstance() {
}
class PXMRegistrationState::_Internal {
 public:
};

PXMRegistrationState::PXMRegistrationState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:paraview_protobuf.PXMRegistrationState)
}
PXMRegistrationState::PXMRegistrationState(const PXMRegistrationState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:paraview_protobuf.PXMRegistrationState)
}

void PXMRegistrationState::SharedCtor() {
}

PXMRegistrationState::~PXMRegistrationState() {
  // @@protoc_insertion_point(destructor:paraview_protobuf.PXMRegistrationState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PXMRegistrationState::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PXMRegistrationState::ArenaDtor(void* object) {
  PXMRegistrationState* _this = reinterpret_cast< PXMRegistrationState* >(object);
  (void)_this;
}
void PXMRegistrationState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PXMRegistrationState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PXMRegistrationState& PXMRegistrationState::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PXMRegistrationState_vtkPVMessage_2eproto.base);
  return *internal_default_instance();
}


void PXMRegistrationState::Clear() {
// @@protoc_insertion_point(message_clear_start:paraview_protobuf.PXMRegistrationState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PXMRegistrationState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PXMRegistrationState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:paraview_protobuf.PXMRegistrationState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paraview_protobuf.PXMRegistrationState)
  return target;
}

size_t PXMRegistrationState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paraview_protobuf.PXMRegistrationState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PXMRegistrationState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paraview_protobuf.PXMRegistrationState)
  GOOGLE_DCHECK_NE(&from, this);
  const PXMRegistrationState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PXMRegistrationState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paraview_protobuf.PXMRegistrationState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paraview_protobuf.PXMRegistrationState)
    MergeFrom(*source);
  }
}

void PXMRegistrationState::MergeFrom(const PXMRegistrationState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paraview_protobuf.PXMRegistrationState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PXMRegistrationState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paraview_protobuf.PXMRegistrationState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PXMRegistrationState::CopyFrom(const PXMRegistrationState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paraview_protobuf.PXMRegistrationState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PXMRegistrationState::IsInitialized() const {
  return true;
}

void PXMRegistrationState::InternalSwap(PXMRegistrationState* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PXMRegistrationState::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProxyDefinitionState_ProxyXMLDefinition::InitAsDefaultInstance() {
}
class ProxyDefinitionState_ProxyXMLDefinition::_Internal {
 public:
  using HasBits = decltype(std::declval<ProxyDefinitionState_ProxyXMLDefinition>()._has_bits_);
  static void set_has_group(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_xml(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

ProxyDefinitionState_ProxyXMLDefinition::ProxyDefinitionState_ProxyXMLDefinition(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:paraview_protobuf.ProxyDefinitionState.ProxyXMLDefinition)
}
ProxyDefinitionState_ProxyXMLDefinition::ProxyDefinitionState_ProxyXMLDefinition(const ProxyDefinitionState_ProxyXMLDefinition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_group()) {
    group_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_group(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_name()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  xml_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_xml()) {
    xml_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_xml(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:paraview_protobuf.ProxyDefinitionState.ProxyXMLDefinition)
}

void ProxyDefinitionState_ProxyXMLDefinition::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProxyDefinitionState_ProxyXMLDefinition_vtkPVMessage_2eproto.base);
  group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  xml_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ProxyDefinitionState_ProxyXMLDefinition::~ProxyDefinitionState_ProxyXMLDefinition() {
  // @@protoc_insertion_point(destructor:paraview_protobuf.ProxyDefinitionState.ProxyXMLDefinition)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProxyDefinitionState_ProxyXMLDefinition::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  group_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  xml_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProxyDefinitionState_ProxyXMLDefinition::ArenaDtor(void* object) {
  ProxyDefinitionState_ProxyXMLDefinition* _this = reinterpret_cast< ProxyDefinitionState_ProxyXMLDefinition* >(object);
  (void)_this;
}
void ProxyDefinitionState_ProxyXMLDefinition::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProxyDefinitionState_ProxyXMLDefinition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProxyDefinitionState_ProxyXMLDefinition& ProxyDefinitionState_ProxyXMLDefinition::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProxyDefinitionState_ProxyXMLDefinition_vtkPVMessage_2eproto.base);
  return *internal_default_instance();
}


void ProxyDefinitionState_ProxyXMLDefinition::Clear() {
// @@protoc_insertion_point(message_clear_start:paraview_protobuf.ProxyDefinitionState.ProxyXMLDefinition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      group_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      xml_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProxyDefinitionState_ProxyXMLDefinition::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required string group = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_group();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "paraview_protobuf.ProxyDefinitionState.ProxyXMLDefinition.group");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "paraview_protobuf.ProxyDefinitionState.ProxyXMLDefinition.name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string xml = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_xml();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "paraview_protobuf.ProxyDefinitionState.ProxyXMLDefinition.xml");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProxyDefinitionState_ProxyXMLDefinition::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:paraview_protobuf.ProxyDefinitionState.ProxyXMLDefinition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string group = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_group().data(), static_cast<int>(this->_internal_group().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "paraview_protobuf.ProxyDefinitionState.ProxyXMLDefinition.group");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_group(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "paraview_protobuf.ProxyDefinitionState.ProxyXMLDefinition.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // required string xml = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_xml().data(), static_cast<int>(this->_internal_xml().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "paraview_protobuf.ProxyDefinitionState.ProxyXMLDefinition.xml");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_xml(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paraview_protobuf.ProxyDefinitionState.ProxyXMLDefinition)
  return target;
}

size_t ProxyDefinitionState_ProxyXMLDefinition::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paraview_protobuf.ProxyDefinitionState.ProxyXMLDefinition)
  size_t total_size = 0;

  if (_internal_has_group()) {
    // required string group = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_group());
  }

  if (_internal_has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (_internal_has_xml()) {
    // required string xml = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_xml());
  }

  return total_size;
}
size_t ProxyDefinitionState_ProxyXMLDefinition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paraview_protobuf.ProxyDefinitionState.ProxyXMLDefinition)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string group = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_group());

    // required string name = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());

    // required string xml = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_xml());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProxyDefinitionState_ProxyXMLDefinition::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paraview_protobuf.ProxyDefinitionState.ProxyXMLDefinition)
  GOOGLE_DCHECK_NE(&from, this);
  const ProxyDefinitionState_ProxyXMLDefinition* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProxyDefinitionState_ProxyXMLDefinition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paraview_protobuf.ProxyDefinitionState.ProxyXMLDefinition)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paraview_protobuf.ProxyDefinitionState.ProxyXMLDefinition)
    MergeFrom(*source);
  }
}

void ProxyDefinitionState_ProxyXMLDefinition::MergeFrom(const ProxyDefinitionState_ProxyXMLDefinition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paraview_protobuf.ProxyDefinitionState.ProxyXMLDefinition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_group(from._internal_group());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_xml(from._internal_xml());
    }
  }
}

void ProxyDefinitionState_ProxyXMLDefinition::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paraview_protobuf.ProxyDefinitionState.ProxyXMLDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProxyDefinitionState_ProxyXMLDefinition::CopyFrom(const ProxyDefinitionState_ProxyXMLDefinition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paraview_protobuf.ProxyDefinitionState.ProxyXMLDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxyDefinitionState_ProxyXMLDefinition::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProxyDefinitionState_ProxyXMLDefinition::InternalSwap(ProxyDefinitionState_ProxyXMLDefinition* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  group_.Swap(&other->group_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  xml_.Swap(&other->xml_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ProxyDefinitionState_ProxyXMLDefinition::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProxyDefinitionState::InitAsDefaultInstance() {
}
class ProxyDefinitionState::_Internal {
 public:
};

ProxyDefinitionState::ProxyDefinitionState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:paraview_protobuf.ProxyDefinitionState)
}
ProxyDefinitionState::ProxyDefinitionState(const ProxyDefinitionState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:paraview_protobuf.ProxyDefinitionState)
}

void ProxyDefinitionState::SharedCtor() {
}

ProxyDefinitionState::~ProxyDefinitionState() {
  // @@protoc_insertion_point(destructor:paraview_protobuf.ProxyDefinitionState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProxyDefinitionState::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProxyDefinitionState::ArenaDtor(void* object) {
  ProxyDefinitionState* _this = reinterpret_cast< ProxyDefinitionState* >(object);
  (void)_this;
}
void ProxyDefinitionState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProxyDefinitionState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProxyDefinitionState& ProxyDefinitionState::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProxyDefinitionState_vtkPVMessage_2eproto.base);
  return *internal_default_instance();
}


void ProxyDefinitionState::Clear() {
// @@protoc_insertion_point(message_clear_start:paraview_protobuf.ProxyDefinitionState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProxyDefinitionState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProxyDefinitionState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:paraview_protobuf.ProxyDefinitionState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paraview_protobuf.ProxyDefinitionState)
  return target;
}

size_t ProxyDefinitionState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paraview_protobuf.ProxyDefinitionState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProxyDefinitionState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paraview_protobuf.ProxyDefinitionState)
  GOOGLE_DCHECK_NE(&from, this);
  const ProxyDefinitionState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProxyDefinitionState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paraview_protobuf.ProxyDefinitionState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paraview_protobuf.ProxyDefinitionState)
    MergeFrom(*source);
  }
}

void ProxyDefinitionState::MergeFrom(const ProxyDefinitionState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paraview_protobuf.ProxyDefinitionState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ProxyDefinitionState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paraview_protobuf.ProxyDefinitionState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProxyDefinitionState::CopyFrom(const ProxyDefinitionState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paraview_protobuf.ProxyDefinitionState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxyDefinitionState::IsInitialized() const {
  return true;
}

void ProxyDefinitionState::InternalSwap(ProxyDefinitionState* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProxyDefinitionState::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PullRequest::InitAsDefaultInstance() {
}
class PullRequest::_Internal {
 public:
};

PullRequest::PullRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:paraview_protobuf.PullRequest)
}
PullRequest::PullRequest(const PullRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:paraview_protobuf.PullRequest)
}

void PullRequest::SharedCtor() {
}

PullRequest::~PullRequest() {
  // @@protoc_insertion_point(destructor:paraview_protobuf.PullRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PullRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PullRequest::ArenaDtor(void* object) {
  PullRequest* _this = reinterpret_cast< PullRequest* >(object);
  (void)_this;
}
void PullRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PullRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PullRequest& PullRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PullRequest_vtkPVMessage_2eproto.base);
  return *internal_default_instance();
}


void PullRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:paraview_protobuf.PullRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PullRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PullRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:paraview_protobuf.PullRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paraview_protobuf.PullRequest)
  return target;
}

size_t PullRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paraview_protobuf.PullRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PullRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paraview_protobuf.PullRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PullRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PullRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paraview_protobuf.PullRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paraview_protobuf.PullRequest)
    MergeFrom(*source);
  }
}

void PullRequest::MergeFrom(const PullRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paraview_protobuf.PullRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PullRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paraview_protobuf.PullRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullRequest::CopyFrom(const PullRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paraview_protobuf.PullRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullRequest::IsInitialized() const {
  return true;
}

void PullRequest::InternalSwap(PullRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PullRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProxySelectionModelState::InitAsDefaultInstance() {
}
class ProxySelectionModelState::_Internal {
 public:
};

ProxySelectionModelState::ProxySelectionModelState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:paraview_protobuf.ProxySelectionModelState)
}
ProxySelectionModelState::ProxySelectionModelState(const ProxySelectionModelState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:paraview_protobuf.ProxySelectionModelState)
}

void ProxySelectionModelState::SharedCtor() {
}

ProxySelectionModelState::~ProxySelectionModelState() {
  // @@protoc_insertion_point(destructor:paraview_protobuf.ProxySelectionModelState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProxySelectionModelState::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProxySelectionModelState::ArenaDtor(void* object) {
  ProxySelectionModelState* _this = reinterpret_cast< ProxySelectionModelState* >(object);
  (void)_this;
}
void ProxySelectionModelState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProxySelectionModelState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProxySelectionModelState& ProxySelectionModelState::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProxySelectionModelState_vtkPVMessage_2eproto.base);
  return *internal_default_instance();
}


void ProxySelectionModelState::Clear() {
// @@protoc_insertion_point(message_clear_start:paraview_protobuf.ProxySelectionModelState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProxySelectionModelState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProxySelectionModelState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:paraview_protobuf.ProxySelectionModelState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paraview_protobuf.ProxySelectionModelState)
  return target;
}

size_t ProxySelectionModelState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paraview_protobuf.ProxySelectionModelState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProxySelectionModelState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paraview_protobuf.ProxySelectionModelState)
  GOOGLE_DCHECK_NE(&from, this);
  const ProxySelectionModelState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProxySelectionModelState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paraview_protobuf.ProxySelectionModelState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paraview_protobuf.ProxySelectionModelState)
    MergeFrom(*source);
  }
}

void ProxySelectionModelState::MergeFrom(const ProxySelectionModelState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paraview_protobuf.ProxySelectionModelState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ProxySelectionModelState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paraview_protobuf.ProxySelectionModelState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProxySelectionModelState::CopyFrom(const ProxySelectionModelState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paraview_protobuf.ProxySelectionModelState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxySelectionModelState::IsInitialized() const {
  return true;
}

void ProxySelectionModelState::InternalSwap(ProxySelectionModelState* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProxySelectionModelState::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LinkState_LinkDescription::InitAsDefaultInstance() {
}
class LinkState_LinkDescription::_Internal {
 public:
  using HasBits = decltype(std::declval<LinkState_LinkDescription>()._has_bits_);
  static void set_has_proxy(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_property_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_direction(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000006) ^ 0x00000006) != 0;
  }
};

LinkState_LinkDescription::LinkState_LinkDescription(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:paraview_protobuf.LinkState.LinkDescription)
}
LinkState_LinkDescription::LinkState_LinkDescription(const LinkState_LinkDescription& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  property_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_property_name()) {
    property_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_property_name(),
      GetArena());
  }
  ::memcpy(&proxy_, &from.proxy_,
    static_cast<size_t>(reinterpret_cast<char*>(&direction_) -
    reinterpret_cast<char*>(&proxy_)) + sizeof(direction_));
  // @@protoc_insertion_point(copy_constructor:paraview_protobuf.LinkState.LinkDescription)
}

void LinkState_LinkDescription::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LinkState_LinkDescription_vtkPVMessage_2eproto.base);
  property_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&proxy_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&direction_) -
      reinterpret_cast<char*>(&proxy_)) + sizeof(direction_));
}

LinkState_LinkDescription::~LinkState_LinkDescription() {
  // @@protoc_insertion_point(destructor:paraview_protobuf.LinkState.LinkDescription)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LinkState_LinkDescription::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  property_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LinkState_LinkDescription::ArenaDtor(void* object) {
  LinkState_LinkDescription* _this = reinterpret_cast< LinkState_LinkDescription* >(object);
  (void)_this;
}
void LinkState_LinkDescription::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LinkState_LinkDescription::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LinkState_LinkDescription& LinkState_LinkDescription::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LinkState_LinkDescription_vtkPVMessage_2eproto.base);
  return *internal_default_instance();
}


void LinkState_LinkDescription::Clear() {
// @@protoc_insertion_point(message_clear_start:paraview_protobuf.LinkState.LinkDescription)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    property_name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&proxy_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&direction_) -
        reinterpret_cast<char*>(&proxy_)) + sizeof(direction_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LinkState_LinkDescription::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required uint32 proxy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_proxy(&has_bits);
          proxy_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string property_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_property_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "paraview_protobuf.LinkState.LinkDescription.property_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required .paraview_protobuf.LinkState.LinkDescription.Direction direction = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::paraview_protobuf::LinkState_LinkDescription_Direction_IsValid(val))) {
            _internal_set_direction(static_cast<::paraview_protobuf::LinkState_LinkDescription_Direction>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LinkState_LinkDescription::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:paraview_protobuf.LinkState.LinkDescription)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 proxy = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_proxy(), target);
  }

  // optional string property_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_property_name().data(), static_cast<int>(this->_internal_property_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "paraview_protobuf.LinkState.LinkDescription.property_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_property_name(), target);
  }

  // required .paraview_protobuf.LinkState.LinkDescription.Direction direction = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_direction(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paraview_protobuf.LinkState.LinkDescription)
  return target;
}

size_t LinkState_LinkDescription::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paraview_protobuf.LinkState.LinkDescription)
  size_t total_size = 0;

  if (_internal_has_proxy()) {
    // required uint32 proxy = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_proxy());
  }

  if (_internal_has_direction()) {
    // required .paraview_protobuf.LinkState.LinkDescription.Direction direction = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_direction());
  }

  return total_size;
}
size_t LinkState_LinkDescription::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paraview_protobuf.LinkState.LinkDescription)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 proxy = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_proxy());

    // required .paraview_protobuf.LinkState.LinkDescription.Direction direction = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_direction());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string property_name = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_property_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinkState_LinkDescription::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paraview_protobuf.LinkState.LinkDescription)
  GOOGLE_DCHECK_NE(&from, this);
  const LinkState_LinkDescription* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LinkState_LinkDescription>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paraview_protobuf.LinkState.LinkDescription)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paraview_protobuf.LinkState.LinkDescription)
    MergeFrom(*source);
  }
}

void LinkState_LinkDescription::MergeFrom(const LinkState_LinkDescription& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paraview_protobuf.LinkState.LinkDescription)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_property_name(from._internal_property_name());
    }
    if (cached_has_bits & 0x00000002u) {
      proxy_ = from.proxy_;
    }
    if (cached_has_bits & 0x00000004u) {
      direction_ = from.direction_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LinkState_LinkDescription::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paraview_protobuf.LinkState.LinkDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinkState_LinkDescription::CopyFrom(const LinkState_LinkDescription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paraview_protobuf.LinkState.LinkDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkState_LinkDescription::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void LinkState_LinkDescription::InternalSwap(LinkState_LinkDescription* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  property_name_.Swap(&other->property_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LinkState_LinkDescription, direction_)
      + sizeof(LinkState_LinkDescription::direction_)
      - PROTOBUF_FIELD_OFFSET(LinkState_LinkDescription, proxy_)>(
          reinterpret_cast<char*>(&proxy_),
          reinterpret_cast<char*>(&other->proxy_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LinkState_LinkDescription::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LinkState::InitAsDefaultInstance() {
}
class LinkState::_Internal {
 public:
};

LinkState::LinkState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:paraview_protobuf.LinkState)
}
LinkState::LinkState(const LinkState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:paraview_protobuf.LinkState)
}

void LinkState::SharedCtor() {
}

LinkState::~LinkState() {
  // @@protoc_insertion_point(destructor:paraview_protobuf.LinkState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LinkState::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LinkState::ArenaDtor(void* object) {
  LinkState* _this = reinterpret_cast< LinkState* >(object);
  (void)_this;
}
void LinkState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LinkState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LinkState& LinkState::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LinkState_vtkPVMessage_2eproto.base);
  return *internal_default_instance();
}


void LinkState::Clear() {
// @@protoc_insertion_point(message_clear_start:paraview_protobuf.LinkState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LinkState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LinkState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:paraview_protobuf.LinkState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paraview_protobuf.LinkState)
  return target;
}

size_t LinkState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paraview_protobuf.LinkState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinkState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paraview_protobuf.LinkState)
  GOOGLE_DCHECK_NE(&from, this);
  const LinkState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LinkState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paraview_protobuf.LinkState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paraview_protobuf.LinkState)
    MergeFrom(*source);
  }
}

void LinkState::MergeFrom(const LinkState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paraview_protobuf.LinkState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LinkState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paraview_protobuf.LinkState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinkState::CopyFrom(const LinkState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paraview_protobuf.LinkState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkState::IsInitialized() const {
  return true;
}

void LinkState::InternalSwap(LinkState* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LinkState::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MousePointer::InitAsDefaultInstance() {
}
class MousePointer::_Internal {
 public:
};

MousePointer::MousePointer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:paraview_protobuf.MousePointer)
}
MousePointer::MousePointer(const MousePointer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:paraview_protobuf.MousePointer)
}

void MousePointer::SharedCtor() {
}

MousePointer::~MousePointer() {
  // @@protoc_insertion_point(destructor:paraview_protobuf.MousePointer)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MousePointer::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MousePointer::ArenaDtor(void* object) {
  MousePointer* _this = reinterpret_cast< MousePointer* >(object);
  (void)_this;
}
void MousePointer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MousePointer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MousePointer& MousePointer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MousePointer_vtkPVMessage_2eproto.base);
  return *internal_default_instance();
}


void MousePointer::Clear() {
// @@protoc_insertion_point(message_clear_start:paraview_protobuf.MousePointer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MousePointer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MousePointer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:paraview_protobuf.MousePointer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paraview_protobuf.MousePointer)
  return target;
}

size_t MousePointer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paraview_protobuf.MousePointer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MousePointer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paraview_protobuf.MousePointer)
  GOOGLE_DCHECK_NE(&from, this);
  const MousePointer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MousePointer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paraview_protobuf.MousePointer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paraview_protobuf.MousePointer)
    MergeFrom(*source);
  }
}

void MousePointer::MergeFrom(const MousePointer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paraview_protobuf.MousePointer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MousePointer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paraview_protobuf.MousePointer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MousePointer::CopyFrom(const MousePointer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paraview_protobuf.MousePointer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MousePointer::IsInitialized() const {
  return true;
}

void MousePointer::InternalSwap(MousePointer* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MousePointer::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ChartViewBounds::InitAsDefaultInstance() {
}
class ChartViewBounds::_Internal {
 public:
};

ChartViewBounds::ChartViewBounds(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:paraview_protobuf.ChartViewBounds)
}
ChartViewBounds::ChartViewBounds(const ChartViewBounds& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:paraview_protobuf.ChartViewBounds)
}

void ChartViewBounds::SharedCtor() {
}

ChartViewBounds::~ChartViewBounds() {
  // @@protoc_insertion_point(destructor:paraview_protobuf.ChartViewBounds)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChartViewBounds::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ChartViewBounds::ArenaDtor(void* object) {
  ChartViewBounds* _this = reinterpret_cast< ChartViewBounds* >(object);
  (void)_this;
}
void ChartViewBounds::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChartViewBounds::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChartViewBounds& ChartViewBounds::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChartViewBounds_vtkPVMessage_2eproto.base);
  return *internal_default_instance();
}


void ChartViewBounds::Clear() {
// @@protoc_insertion_point(message_clear_start:paraview_protobuf.ChartViewBounds)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChartViewBounds::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChartViewBounds::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:paraview_protobuf.ChartViewBounds)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paraview_protobuf.ChartViewBounds)
  return target;
}

size_t ChartViewBounds::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paraview_protobuf.ChartViewBounds)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChartViewBounds::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paraview_protobuf.ChartViewBounds)
  GOOGLE_DCHECK_NE(&from, this);
  const ChartViewBounds* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChartViewBounds>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paraview_protobuf.ChartViewBounds)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paraview_protobuf.ChartViewBounds)
    MergeFrom(*source);
  }
}

void ChartViewBounds::MergeFrom(const ChartViewBounds& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paraview_protobuf.ChartViewBounds)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ChartViewBounds::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paraview_protobuf.ChartViewBounds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChartViewBounds::CopyFrom(const ChartViewBounds& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paraview_protobuf.ChartViewBounds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChartViewBounds::IsInitialized() const {
  return true;
}

void ChartViewBounds::InternalSwap(ChartViewBounds* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ChartViewBounds::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClientsInformation_ClientInfo::InitAsDefaultInstance() {
}
class ClientsInformation_ClientInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<ClientsInformation_ClientInfo>()._has_bits_);
  static void set_has_user(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_is_master(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_follow_cam(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_disable_further_connections(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_connect_id(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

ClientsInformation_ClientInfo::ClientsInformation_ClientInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:paraview_protobuf.ClientsInformation.ClientInfo)
}
ClientsInformation_ClientInfo::ClientsInformation_ClientInfo(const ClientsInformation_ClientInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_name()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  ::memcpy(&user_, &from.user_,
    static_cast<size_t>(reinterpret_cast<char*>(&connect_id_) -
    reinterpret_cast<char*>(&user_)) + sizeof(connect_id_));
  // @@protoc_insertion_point(copy_constructor:paraview_protobuf.ClientsInformation.ClientInfo)
}

void ClientsInformation_ClientInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClientsInformation_ClientInfo_vtkPVMessage_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&connect_id_) -
      reinterpret_cast<char*>(&user_)) + sizeof(connect_id_));
}

ClientsInformation_ClientInfo::~ClientsInformation_ClientInfo() {
  // @@protoc_insertion_point(destructor:paraview_protobuf.ClientsInformation.ClientInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClientsInformation_ClientInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ClientsInformation_ClientInfo::ArenaDtor(void* object) {
  ClientsInformation_ClientInfo* _this = reinterpret_cast< ClientsInformation_ClientInfo* >(object);
  (void)_this;
}
void ClientsInformation_ClientInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClientsInformation_ClientInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientsInformation_ClientInfo& ClientsInformation_ClientInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClientsInformation_ClientInfo_vtkPVMessage_2eproto.base);
  return *internal_default_instance();
}


void ClientsInformation_ClientInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:paraview_protobuf.ClientsInformation.ClientInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&user_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&connect_id_) -
        reinterpret_cast<char*>(&user_)) + sizeof(connect_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClientsInformation_ClientInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required uint32 user = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_user(&has_bits);
          user_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "paraview_protobuf.ClientsInformation.ClientInfo.name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_master = 3 [default = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_is_master(&has_bits);
          is_master_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool follow_cam = 4 [default = false];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_follow_cam(&has_bits);
          follow_cam_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool disable_further_connections = 5 [default = false];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_disable_further_connections(&has_bits);
          disable_further_connections_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 connect_id = 6 [default = 0];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_connect_id(&has_bits);
          connect_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientsInformation_ClientInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:paraview_protobuf.ClientsInformation.ClientInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 user = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_user(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "paraview_protobuf.ClientsInformation.ClientInfo.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // optional bool is_master = 3 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_is_master(), target);
  }

  // optional bool follow_cam = 4 [default = false];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_follow_cam(), target);
  }

  // optional bool disable_further_connections = 5 [default = false];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_disable_further_connections(), target);
  }

  // optional uint32 connect_id = 6 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_connect_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paraview_protobuf.ClientsInformation.ClientInfo)
  return target;
}

size_t ClientsInformation_ClientInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paraview_protobuf.ClientsInformation.ClientInfo)
  size_t total_size = 0;

  // required uint32 user = 1;
  if (_internal_has_user()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_user());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string name = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (cached_has_bits & 0x0000003cu) {
    // optional bool is_master = 3 [default = false];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool follow_cam = 4 [default = false];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool disable_further_connections = 5 [default = false];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional uint32 connect_id = 6 [default = 0];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_connect_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientsInformation_ClientInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paraview_protobuf.ClientsInformation.ClientInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientsInformation_ClientInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientsInformation_ClientInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paraview_protobuf.ClientsInformation.ClientInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paraview_protobuf.ClientsInformation.ClientInfo)
    MergeFrom(*source);
  }
}

void ClientsInformation_ClientInfo::MergeFrom(const ClientsInformation_ClientInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paraview_protobuf.ClientsInformation.ClientInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      user_ = from.user_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_master_ = from.is_master_;
    }
    if (cached_has_bits & 0x00000008u) {
      follow_cam_ = from.follow_cam_;
    }
    if (cached_has_bits & 0x00000010u) {
      disable_further_connections_ = from.disable_further_connections_;
    }
    if (cached_has_bits & 0x00000020u) {
      connect_id_ = from.connect_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ClientsInformation_ClientInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paraview_protobuf.ClientsInformation.ClientInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientsInformation_ClientInfo::CopyFrom(const ClientsInformation_ClientInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paraview_protobuf.ClientsInformation.ClientInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientsInformation_ClientInfo::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ClientsInformation_ClientInfo::InternalSwap(ClientsInformation_ClientInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ClientsInformation_ClientInfo, connect_id_)
      + sizeof(ClientsInformation_ClientInfo::connect_id_)
      - PROTOBUF_FIELD_OFFSET(ClientsInformation_ClientInfo, user_)>(
          reinterpret_cast<char*>(&user_),
          reinterpret_cast<char*>(&other->user_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientsInformation_ClientInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClientsInformation::InitAsDefaultInstance() {
}
class ClientsInformation::_Internal {
 public:
};

ClientsInformation::ClientsInformation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:paraview_protobuf.ClientsInformation)
}
ClientsInformation::ClientsInformation(const ClientsInformation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:paraview_protobuf.ClientsInformation)
}

void ClientsInformation::SharedCtor() {
}

ClientsInformation::~ClientsInformation() {
  // @@protoc_insertion_point(destructor:paraview_protobuf.ClientsInformation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClientsInformation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ClientsInformation::ArenaDtor(void* object) {
  ClientsInformation* _this = reinterpret_cast< ClientsInformation* >(object);
  (void)_this;
}
void ClientsInformation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClientsInformation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientsInformation& ClientsInformation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClientsInformation_vtkPVMessage_2eproto.base);
  return *internal_default_instance();
}


void ClientsInformation::Clear() {
// @@protoc_insertion_point(message_clear_start:paraview_protobuf.ClientsInformation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClientsInformation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientsInformation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:paraview_protobuf.ClientsInformation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paraview_protobuf.ClientsInformation)
  return target;
}

size_t ClientsInformation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paraview_protobuf.ClientsInformation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientsInformation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paraview_protobuf.ClientsInformation)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientsInformation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientsInformation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paraview_protobuf.ClientsInformation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paraview_protobuf.ClientsInformation)
    MergeFrom(*source);
  }
}

void ClientsInformation::MergeFrom(const ClientsInformation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paraview_protobuf.ClientsInformation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ClientsInformation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paraview_protobuf.ClientsInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientsInformation::CopyFrom(const ClientsInformation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paraview_protobuf.ClientsInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientsInformation::IsInitialized() const {
  return true;
}

void ClientsInformation::InternalSwap(ClientsInformation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientsInformation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ChatMessage::InitAsDefaultInstance() {
}
class ChatMessage::_Internal {
 public:
};

ChatMessage::ChatMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:paraview_protobuf.ChatMessage)
}
ChatMessage::ChatMessage(const ChatMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:paraview_protobuf.ChatMessage)
}

void ChatMessage::SharedCtor() {
}

ChatMessage::~ChatMessage() {
  // @@protoc_insertion_point(destructor:paraview_protobuf.ChatMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChatMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ChatMessage::ArenaDtor(void* object) {
  ChatMessage* _this = reinterpret_cast< ChatMessage* >(object);
  (void)_this;
}
void ChatMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChatMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChatMessage& ChatMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChatMessage_vtkPVMessage_2eproto.base);
  return *internal_default_instance();
}


void ChatMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:paraview_protobuf.ChatMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChatMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChatMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:paraview_protobuf.ChatMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paraview_protobuf.ChatMessage)
  return target;
}

size_t ChatMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paraview_protobuf.ChatMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChatMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paraview_protobuf.ChatMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChatMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paraview_protobuf.ChatMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paraview_protobuf.ChatMessage)
    MergeFrom(*source);
  }
}

void ChatMessage::MergeFrom(const ChatMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paraview_protobuf.ChatMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ChatMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paraview_protobuf.ChatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatMessage::CopyFrom(const ChatMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paraview_protobuf.ChatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatMessage::IsInitialized() const {
  return true;
}

void ChatMessage::InternalSwap(ChatMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ChatMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void QtEvent::InitAsDefaultInstance() {
}
class QtEvent::_Internal {
 public:
};

QtEvent::QtEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:paraview_protobuf.QtEvent)
}
QtEvent::QtEvent(const QtEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:paraview_protobuf.QtEvent)
}

void QtEvent::SharedCtor() {
}

QtEvent::~QtEvent() {
  // @@protoc_insertion_point(destructor:paraview_protobuf.QtEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QtEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void QtEvent::ArenaDtor(void* object) {
  QtEvent* _this = reinterpret_cast< QtEvent* >(object);
  (void)_this;
}
void QtEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QtEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const QtEvent& QtEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_QtEvent_vtkPVMessage_2eproto.base);
  return *internal_default_instance();
}


void QtEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:paraview_protobuf.QtEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QtEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QtEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:paraview_protobuf.QtEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paraview_protobuf.QtEvent)
  return target;
}

size_t QtEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paraview_protobuf.QtEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QtEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paraview_protobuf.QtEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const QtEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QtEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paraview_protobuf.QtEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paraview_protobuf.QtEvent)
    MergeFrom(*source);
  }
}

void QtEvent::MergeFrom(const QtEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paraview_protobuf.QtEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void QtEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paraview_protobuf.QtEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QtEvent::CopyFrom(const QtEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paraview_protobuf.QtEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QtEvent::IsInitialized() const {
  return true;
}

void QtEvent::InternalSwap(QtEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QtEvent::GetMetadata() const {
  return GetMetadataStatic();
}

const std::string DefinitionHeader_client_class_default("");
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DefinitionHeader::kClientClassFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  DefinitionHeader::client_class(kClientClassFieldNumber, DefinitionHeader_client_class_default);
const std::string DefinitionHeader_server_class_default("");
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DefinitionHeader::kServerClassFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  DefinitionHeader::server_class(kServerClassFieldNumber, DefinitionHeader_server_class_default);
const std::string ProxyState_xml_group_default("");
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxyState::kXmlGroupFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  ProxyState::xml_group(kXmlGroupFieldNumber, ProxyState_xml_group_default);
const std::string ProxyState_xml_name_default("");
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxyState::kXmlNameFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  ProxyState::xml_name(kXmlNameFieldNumber, ProxyState_xml_name_default);
const std::string ProxyState_xml_sub_proxy_name_default("");
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxyState::kXmlSubProxyNameFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  ProxyState::xml_sub_proxy_name(kXmlSubProxyNameFieldNumber, ProxyState_xml_sub_proxy_name_default);
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxyState::kPropertyFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::ProxyState_Property >, 11, false >
  ProxyState::property(kPropertyFieldNumber, ::paraview_protobuf::ProxyState_Property::default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxyState::kSubproxyFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::ProxyState_SubProxy >, 11, false >
  ProxyState::subproxy(kSubproxyFieldNumber, ::paraview_protobuf::ProxyState_SubProxy::default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxyState::kAnnotationFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::ProxyState_Annotation >, 11, false >
  ProxyState::annotation(kAnnotationFieldNumber, ::paraview_protobuf::ProxyState_Annotation::default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxyState::kHasAnnotationFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  ProxyState::has_annotation(kHasAnnotationFieldNumber, false);
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxyState::kUserDataFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::ProxyState_UserData >, 11, false >
  ProxyState::user_data(kUserDataFieldNumber, ::paraview_protobuf::ProxyState_UserData::default_instance());
const std::string ProxyState_log_name_default("");
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxyState::kLogNameFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  ProxyState::log_name(kLogNameFieldNumber, ProxyState_log_name_default);
const std::string ProxyState_vtk_classname_default("");
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxyState::kVtkClassnameFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  ProxyState::vtk_classname(kVtkClassnameFieldNumber, ProxyState_vtk_classname_default);
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PXMRegistrationState::kRegisteredProxyFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::PXMRegistrationState_Entry >, 11, false >
  PXMRegistrationState::registered_proxy(kRegisteredProxyFieldNumber, ::paraview_protobuf::PXMRegistrationState_Entry::default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PXMRegistrationState::kRegisteredSelectionModelFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::PXMRegistrationState_Entry >, 11, false >
  PXMRegistrationState::registered_selection_model(kRegisteredSelectionModelFieldNumber, ::paraview_protobuf::PXMRegistrationState_Entry::default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PXMRegistrationState::kRegisteredLinkFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::PXMRegistrationState_Entry >, 11, false >
  PXMRegistrationState::registered_link(kRegisteredLinkFieldNumber, ::paraview_protobuf::PXMRegistrationState_Entry::default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxyDefinitionState::kXmlDefinitionProxyFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::ProxyDefinitionState_ProxyXMLDefinition >, 11, false >
  ProxyDefinitionState::xml_definition_proxy(kXmlDefinitionProxyFieldNumber, ::paraview_protobuf::ProxyDefinitionState_ProxyXMLDefinition::default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxyDefinitionState::kXmlCustomDefinitionProxyFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::ProxyDefinitionState_ProxyXMLDefinition >, 11, false >
  ProxyDefinitionState::xml_custom_definition_proxy(kXmlCustomDefinitionProxyFieldNumber, ::paraview_protobuf::ProxyDefinitionState_ProxyXMLDefinition::default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PullRequest::kArgumentsFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::Variant >, 11, false >
  PullRequest::arguments(kArgumentsFieldNumber, ::paraview_protobuf::Variant::default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxySelectionModelState::kCurrentProxyFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< ::PROTOBUF_NAMESPACE_ID::uint32 >, 13, false >
  ProxySelectionModelState::current_proxy(kCurrentProxyFieldNumber, 0u);
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxySelectionModelState::kCurrentPortFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< ::PROTOBUF_NAMESPACE_ID::int32 >, 5, false >
  ProxySelectionModelState::current_port(kCurrentPortFieldNumber, -1);
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxySelectionModelState::kProxyFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::RepeatedPrimitiveTypeTraits< ::PROTOBUF_NAMESPACE_ID::uint32 >, 13, false >
  ProxySelectionModelState::proxy(kProxyFieldNumber, 0u);
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxySelectionModelState::kPortFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::RepeatedPrimitiveTypeTraits< ::PROTOBUF_NAMESPACE_ID::int32 >, 5, false >
  ProxySelectionModelState::port(kPortFieldNumber, 0);
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinkState::kPropagateUpdateFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  LinkState::propagate_update(kPropagateUpdateFieldNumber, true);
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinkState::kEnabledFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  LinkState::enabled(kEnabledFieldNumber, true);
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinkState::kSyncInteractiveRendersFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  LinkState::sync_interactive_renders(kSyncInteractiveRendersFieldNumber, true);
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinkState::kLinkFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::LinkState_LinkDescription >, 11, false >
  LinkState::link(kLinkFieldNumber, ::paraview_protobuf::LinkState_LinkDescription::default_instance());
const std::string LinkState_exception_property_default("");
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinkState::kExceptionPropertyFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::RepeatedStringTypeTraits, 9, false >
  LinkState::exception_property(kExceptionPropertyFieldNumber, LinkState_exception_property_default);
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MousePointer::kViewFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< ::PROTOBUF_NAMESPACE_ID::uint32 >, 13, false >
  MousePointer::view(kViewFieldNumber, 0u);
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MousePointer::kXFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< double >, 1, false >
  MousePointer::x(kXFieldNumber, 0);
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MousePointer::kYFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< double >, 1, false >
  MousePointer::y(kYFieldNumber, 0);
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MousePointer::kForceShowFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  MousePointer::forceShow(kForceShowFieldNumber, false);
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MousePointer::kRatioTypeFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::EnumTypeTraits< ::paraview_protobuf::MousePointer_Ratio, ::paraview_protobuf::MousePointer_Ratio_IsValid>, 14, false >
  MousePointer::ratioType(kRatioTypeFieldNumber, static_cast< ::paraview_protobuf::MousePointer_Ratio >(1));
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChartViewBounds::kViewFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< ::PROTOBUF_NAMESPACE_ID::uint32 >, 13, false >
  ChartViewBounds::view(kViewFieldNumber, 0u);
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChartViewBounds::kRangeFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::RepeatedPrimitiveTypeTraits< double >, 1, false >
  ChartViewBounds::range(kRangeFieldNumber, 0);
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientsInformation::kUserFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::ClientsInformation_ClientInfo >, 11, false >
  ClientsInformation::user(kUserFieldNumber, ::paraview_protobuf::ClientsInformation_ClientInfo::default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatMessage::kAuthorFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< ::PROTOBUF_NAMESPACE_ID::uint32 >, 13, false >
  ChatMessage::author(kAuthorFieldNumber, 0u);
const std::string ChatMessage_txt_default("");
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatMessage::kTxtFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  ChatMessage::txt(kTxtFieldNumber, ChatMessage_txt_default);
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QtEvent::kTypeFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::PROTOBUF_NAMESPACE_ID::internal::EnumTypeTraits< ::paraview_protobuf::QtEvent_QtEventType, ::paraview_protobuf::QtEvent_QtEventType_IsValid>, 14, false >
  QtEvent::type(kTypeFieldNumber, static_cast< ::paraview_protobuf::QtEvent_QtEventType >(1));

// @@protoc_insertion_point(namespace_scope)
}  // namespace paraview_protobuf
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::paraview_protobuf::Variant* Arena::CreateMaybeMessage< ::paraview_protobuf::Variant >(Arena* arena) {
  return Arena::CreateMessageInternal< ::paraview_protobuf::Variant >(arena);
}
template<> PROTOBUF_NOINLINE ::paraview_protobuf::VariantList* Arena::CreateMaybeMessage< ::paraview_protobuf::VariantList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::paraview_protobuf::VariantList >(arena);
}
template<> PROTOBUF_NOINLINE ::paraview_protobuf::MessageCollection* Arena::CreateMaybeMessage< ::paraview_protobuf::MessageCollection >(Arena* arena) {
  return Arena::CreateMessageInternal< ::paraview_protobuf::MessageCollection >(arena);
}
template<> PROTOBUF_NOINLINE ::paraview_protobuf::Message* Arena::CreateMaybeMessage< ::paraview_protobuf::Message >(Arena* arena) {
  return Arena::CreateMessageInternal< ::paraview_protobuf::Message >(arena);
}
template<> PROTOBUF_NOINLINE ::paraview_protobuf::DefinitionHeader* Arena::CreateMaybeMessage< ::paraview_protobuf::DefinitionHeader >(Arena* arena) {
  return Arena::CreateMessageInternal< ::paraview_protobuf::DefinitionHeader >(arena);
}
template<> PROTOBUF_NOINLINE ::paraview_protobuf::ProxyState_SubProxy* Arena::CreateMaybeMessage< ::paraview_protobuf::ProxyState_SubProxy >(Arena* arena) {
  return Arena::CreateMessageInternal< ::paraview_protobuf::ProxyState_SubProxy >(arena);
}
template<> PROTOBUF_NOINLINE ::paraview_protobuf::ProxyState_Annotation* Arena::CreateMaybeMessage< ::paraview_protobuf::ProxyState_Annotation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::paraview_protobuf::ProxyState_Annotation >(arena);
}
template<> PROTOBUF_NOINLINE ::paraview_protobuf::ProxyState_UserData* Arena::CreateMaybeMessage< ::paraview_protobuf::ProxyState_UserData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::paraview_protobuf::ProxyState_UserData >(arena);
}
template<> PROTOBUF_NOINLINE ::paraview_protobuf::ProxyState_Property* Arena::CreateMaybeMessage< ::paraview_protobuf::ProxyState_Property >(Arena* arena) {
  return Arena::CreateMessageInternal< ::paraview_protobuf::ProxyState_Property >(arena);
}
template<> PROTOBUF_NOINLINE ::paraview_protobuf::ProxyState* Arena::CreateMaybeMessage< ::paraview_protobuf::ProxyState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::paraview_protobuf::ProxyState >(arena);
}
template<> PROTOBUF_NOINLINE ::paraview_protobuf::PXMRegistrationState_Entry* Arena::CreateMaybeMessage< ::paraview_protobuf::PXMRegistrationState_Entry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::paraview_protobuf::PXMRegistrationState_Entry >(arena);
}
template<> PROTOBUF_NOINLINE ::paraview_protobuf::PXMRegistrationState* Arena::CreateMaybeMessage< ::paraview_protobuf::PXMRegistrationState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::paraview_protobuf::PXMRegistrationState >(arena);
}
template<> PROTOBUF_NOINLINE ::paraview_protobuf::ProxyDefinitionState_ProxyXMLDefinition* Arena::CreateMaybeMessage< ::paraview_protobuf::ProxyDefinitionState_ProxyXMLDefinition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::paraview_protobuf::ProxyDefinitionState_ProxyXMLDefinition >(arena);
}
template<> PROTOBUF_NOINLINE ::paraview_protobuf::ProxyDefinitionState* Arena::CreateMaybeMessage< ::paraview_protobuf::ProxyDefinitionState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::paraview_protobuf::ProxyDefinitionState >(arena);
}
template<> PROTOBUF_NOINLINE ::paraview_protobuf::PullRequest* Arena::CreateMaybeMessage< ::paraview_protobuf::PullRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::paraview_protobuf::PullRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::paraview_protobuf::ProxySelectionModelState* Arena::CreateMaybeMessage< ::paraview_protobuf::ProxySelectionModelState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::paraview_protobuf::ProxySelectionModelState >(arena);
}
template<> PROTOBUF_NOINLINE ::paraview_protobuf::LinkState_LinkDescription* Arena::CreateMaybeMessage< ::paraview_protobuf::LinkState_LinkDescription >(Arena* arena) {
  return Arena::CreateMessageInternal< ::paraview_protobuf::LinkState_LinkDescription >(arena);
}
template<> PROTOBUF_NOINLINE ::paraview_protobuf::LinkState* Arena::CreateMaybeMessage< ::paraview_protobuf::LinkState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::paraview_protobuf::LinkState >(arena);
}
template<> PROTOBUF_NOINLINE ::paraview_protobuf::MousePointer* Arena::CreateMaybeMessage< ::paraview_protobuf::MousePointer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::paraview_protobuf::MousePointer >(arena);
}
template<> PROTOBUF_NOINLINE ::paraview_protobuf::ChartViewBounds* Arena::CreateMaybeMessage< ::paraview_protobuf::ChartViewBounds >(Arena* arena) {
  return Arena::CreateMessageInternal< ::paraview_protobuf::ChartViewBounds >(arena);
}
template<> PROTOBUF_NOINLINE ::paraview_protobuf::ClientsInformation_ClientInfo* Arena::CreateMaybeMessage< ::paraview_protobuf::ClientsInformation_ClientInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::paraview_protobuf::ClientsInformation_ClientInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::paraview_protobuf::ClientsInformation* Arena::CreateMaybeMessage< ::paraview_protobuf::ClientsInformation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::paraview_protobuf::ClientsInformation >(arena);
}
template<> PROTOBUF_NOINLINE ::paraview_protobuf::ChatMessage* Arena::CreateMaybeMessage< ::paraview_protobuf::ChatMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::paraview_protobuf::ChatMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::paraview_protobuf::QtEvent* Arena::CreateMaybeMessage< ::paraview_protobuf::QtEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::paraview_protobuf::QtEvent >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
